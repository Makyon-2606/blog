{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sjamp\\\\Documents\\\\\\u5B66\\u7FD2\\\\react-guide-material\\\\13_redux\\\\start\\\\src\\\\070_blog\\\\components\\\\SignUpPass.js\",\n  _s = $RefreshSig$();\nimport { useCallback, useEffect, useState } from 'react';\nimport { UPPERCASE_REGEX, LOWERCASE_REGEX, DIGIT_REGEX, SPECIAL_CHAR_REGEX } from '../consts/const';\nimport ErrorMessage from './ErrorMessage';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst SignUpPass = ({\n  passState,\n  setPassErrorFlag\n}) => {\n  _s();\n  const [pass, setPass] = passState; // 入力値の状態管理（props）\n  const setErrorFlag = setPassErrorFlag; // エラーフラグ_更新関数のみ（props）\n  const [isFirstInputPass, setIsFirstInputPass] = useState(false); // 初期入力フラグ\n\n  const [isLengthValid, setIsLengthValid] = useState(false); // 10文字以上入力されているか\n  const [hasUppercase, setHasUppercase] = useState(false); // 大文字が含まれているか状態管理\n  const [hasLowercase, setHasLowercase] = useState(false); // 小文字が含まれているか状態管理\n  const [hasDegit, setDegit] = useState(false); // 数字が含まれているか状態管理\n  const [hasSpecialChar, setHasSpecialChar] = useState(false); // 記号が含まれているか状態管理\n  const [isPasswordCriteriaMet, setIsPasswordCriteriaMet] = useState(false); // すべての入力条件を満たしているか\n\n  // パスワードのバリデーションチェックを行う関数\n  const validatePassword = useCallback(() => {\n    const isLengthValid = String(pass).length >= 10;\n    setIsLengthValid(isLengthValid); // 10文字以上入力されているか\n\n    const isUppercase = UPPERCASE_REGEX.test(pass); // 大文字が含まれているか\n    setHasUppercase(isUppercase);\n    const isLowercase = pass ? LOWERCASE_REGEX.test(pass) : false; // 小文字が含まれているか。nullを直接正規表現のtestメソッドに渡すと、nullが文字列\"null\"に変換され、その結果としてテストが実行される防止\n    isLowercase ? setHasLowercase(true) : setHasLowercase(false);\n    const isDigit = DIGIT_REGEX.test(pass); // 数値が含まれているか\n    isDigit ? setDegit(true) : setDegit(false);\n    const isSpecialChar = SPECIAL_CHAR_REGEX.test(pass); // 記号が含まれているか\n    isSpecialChar ? setHasSpecialChar(true) : setHasSpecialChar(false);\n    console.log(isLengthValid && isUppercase && isLowercase && isDigit && isSpecialChar);\n    setIsPasswordCriteriaMet(isLengthValid && isUppercase && isLowercase && isDigit && isSpecialChar); // 上記すべてがtrueであるか\n  }, [pass]);\n\n  // パスワードの入力条件を満たしているか確認\n  useEffect(() => {\n    validatePassword();\n  }, [pass]);\n\n  // 初期入力時のみ、バリデーションチェックを実行しない\n  useEffect(() => {\n    if (isFirstInputPass) {}\n  }, [isFirstInputPass, validatePassword]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      placeholder: \"\\u30D1\\u30B9\\u30EF\\u30FC\\u30C9\",\n      value: pass,\n      onChange: e => {\n        setPass(e.target.value);\n      },\n      onBlur: () => setIsFirstInputPass(true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), String(isFirstInputPass), String(isPasswordCriteriaMet), isFirstInputPass && !isPasswordCriteriaMet && /*#__PURE__*/_jsxDEV(ErrorMessage, {\n      message: \"\\u4E0B\\u8A18\\u3059\\u3079\\u3066\\u306E\\u6761\\u4EF6\\u3092\\u542B\\u3081\\u305F\\u30D1\\u30B9\\u30EF\\u30FC\\u30C9\\u3092\\u8A2D\\u5B9A\\u3057\\u3066\\u304F\\u3060\\u3055\\u3044\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"list-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"li\", {\n        className: `lengthValid-${isLengthValid}`,\n        children: \"10\\u6587\\u5B57\\u4EE5\\u4E0A\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        className: `uppercase-${hasUppercase}`,\n        children: \"\\u534A\\u89D2\\u5927\\u6587\\u5B57\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        className: `lowercase-${hasLowercase}`,\n        children: \"\\u534A\\u89D2\\u5C0F\\u6587\\u5B57\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        className: `degit-${hasDegit}`,\n        children: \"\\u534A\\u89D2\\u6570\\u5024\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        className: `special-char-${hasSpecialChar}`,\n        children: \"\\u534A\\u89D2\\u8A18\\u53F7\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(SignUpPass, \"Zwshx/ydFMYGQalbUmpBIxrts/M=\");\n_c = SignUpPass;\nexport default SignUpPass;\nvar _c;\n$RefreshReg$(_c, \"SignUpPass\");","map":{"version":3,"names":["useCallback","useEffect","useState","UPPERCASE_REGEX","LOWERCASE_REGEX","DIGIT_REGEX","SPECIAL_CHAR_REGEX","ErrorMessage","jsxDEV","_jsxDEV","Fragment","_Fragment","SignUpPass","passState","setPassErrorFlag","_s","pass","setPass","setErrorFlag","isFirstInputPass","setIsFirstInputPass","isLengthValid","setIsLengthValid","hasUppercase","setHasUppercase","hasLowercase","setHasLowercase","hasDegit","setDegit","hasSpecialChar","setHasSpecialChar","isPasswordCriteriaMet","setIsPasswordCriteriaMet","validatePassword","String","length","isUppercase","test","isLowercase","isDigit","isSpecialChar","console","log","children","type","placeholder","value","onChange","e","target","onBlur","fileName","_jsxFileName","lineNumber","columnNumber","message","className","_c","$RefreshReg$"],"sources":["C:/Users/sjamp/Documents/学習/react-guide-material/13_redux/start/src/070_blog/components/SignUpPass.js"],"sourcesContent":["import { useCallback, useEffect, useState } from 'react';\r\nimport {\r\n  UPPERCASE_REGEX,\r\n  LOWERCASE_REGEX,\r\n  DIGIT_REGEX,\r\n  SPECIAL_CHAR_REGEX,\r\n} from '../consts/const';\r\nimport ErrorMessage from './ErrorMessage';\r\n\r\nconst SignUpPass = ({ passState, setPassErrorFlag }) => {\r\n  const [pass, setPass] = passState; // 入力値の状態管理（props）\r\n  const setErrorFlag = setPassErrorFlag; // エラーフラグ_更新関数のみ（props）\r\n  const [isFirstInputPass, setIsFirstInputPass] = useState(false); // 初期入力フラグ\r\n\r\n  const [isLengthValid, setIsLengthValid] = useState(false); // 10文字以上入力されているか\r\n  const [hasUppercase, setHasUppercase] = useState(false); // 大文字が含まれているか状態管理\r\n  const [hasLowercase, setHasLowercase] = useState(false); // 小文字が含まれているか状態管理\r\n  const [hasDegit, setDegit] = useState(false); // 数字が含まれているか状態管理\r\n  const [hasSpecialChar, setHasSpecialChar] = useState(false); // 記号が含まれているか状態管理\r\n  const [isPasswordCriteriaMet, setIsPasswordCriteriaMet] = useState(false); // すべての入力条件を満たしているか\r\n\r\n  // パスワードのバリデーションチェックを行う関数\r\n  const validatePassword = useCallback(() => {\r\n    const isLengthValid = String(pass).length >= 10;\r\n    setIsLengthValid(isLengthValid); // 10文字以上入力されているか\r\n\r\n    const isUppercase = UPPERCASE_REGEX.test(pass); // 大文字が含まれているか\r\n    setHasUppercase(isUppercase);\r\n\r\n    const isLowercase = pass ? LOWERCASE_REGEX.test(pass) : false; // 小文字が含まれているか。nullを直接正規表現のtestメソッドに渡すと、nullが文字列\"null\"に変換され、その結果としてテストが実行される防止\r\n    isLowercase ? setHasLowercase(true) : setHasLowercase(false);\r\n\r\n    const isDigit = DIGIT_REGEX.test(pass); // 数値が含まれているか\r\n    isDigit ? setDegit(true) : setDegit(false);\r\n\r\n    const isSpecialChar = SPECIAL_CHAR_REGEX.test(pass); // 記号が含まれているか\r\n    isSpecialChar ? setHasSpecialChar(true) : setHasSpecialChar(false);\r\n    console.log(\r\n      isLengthValid && isUppercase && isLowercase && isDigit && isSpecialChar\r\n    );\r\n    setIsPasswordCriteriaMet(\r\n      isLengthValid && isUppercase && isLowercase && isDigit && isSpecialChar\r\n    ); // 上記すべてがtrueであるか\r\n  }, [pass]);\r\n\r\n  // パスワードの入力条件を満たしているか確認\r\n  useEffect(() => {\r\n    validatePassword();\r\n  }, [pass]);\r\n\r\n  // 初期入力時のみ、バリデーションチェックを実行しない\r\n  useEffect(() => {\r\n    if (isFirstInputPass) {\r\n    }\r\n  }, [isFirstInputPass, validatePassword]);\r\n\r\n  return (\r\n    <>\r\n      <input\r\n        type='password'\r\n        placeholder='パスワード'\r\n        value={pass}\r\n        onChange={(e) => {\r\n          setPass(e.target.value);\r\n        }}\r\n        onBlur={() => setIsFirstInputPass(true)}\r\n      />\r\n      {String(isFirstInputPass)}\r\n      {String(isPasswordCriteriaMet)}\r\n      {isFirstInputPass && !isPasswordCriteriaMet && (\r\n        <ErrorMessage message='下記すべての条件を含めたパスワードを設定してください' />\r\n      )}\r\n      <ul className='list-container'>\r\n        <li className={`lengthValid-${isLengthValid}`}>10文字以上</li>\r\n        <li className={`uppercase-${hasUppercase}`}>半角大文字</li>\r\n        <li className={`lowercase-${hasLowercase}`}>半角小文字</li>\r\n        <li className={`degit-${hasDegit}`}>半角数値</li>\r\n        <li className={`special-char-${hasSpecialChar}`}>半角記号</li>\r\n      </ul>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SignUpPass;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}