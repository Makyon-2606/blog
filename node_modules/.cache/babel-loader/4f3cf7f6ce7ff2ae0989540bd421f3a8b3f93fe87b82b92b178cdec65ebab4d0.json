{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sjamp\\\\Documents\\\\\\u5B66\\u7FD2\\\\react-guide-material\\\\13_redux\\\\start\\\\src\\\\070_blog\\\\NewPost.js\",\n  _s = $RefreshSig$();\nimport axios from 'axios';\nimport { useEffect, useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useNavigate } from 'react-router-dom';\nimport { ENDPOINT_BLOG } from './consts/const';\nimport { addAuthUserBlog as addAuthUserBlogActions } from './store/modules/authUserState';\n\n/**\r\n * 新規投稿画面\r\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst NewPost = () => {\n  _s();\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  const authUserProfile = useSelector(state => state.user.authUserProfile);\n  const authUserBlogPosts = useSelector(state => state.user.authUserBlog.posts);\n  const [title, setTitle] = useState(''); // タイトルの入力値の状態管理\n  const [titleErrorFlag, setTitleErrorFlag] = useState(false); // タイトルのエラーフラグ\n\n  const [content, setContent] = useState(''); // 文章の入力値の状態管理\n  const [contentErrorFlag, setContentErrorFlag] = useState(false); // 文章のエラーフラグ\n\n  const [disabledFlag, setDisabledFlag] = useState(true); // 投稿ボタンの活性フラグ\n\n  /**\r\n   * バリデーションチェック関数を呼び出す処理\r\n   *\r\n   * @validateNewPost 新規投稿のバリデーションチェック関数\r\n   * @param {string} title 新規投稿のタイトル\r\n   * @param {string} content 新規投稿の文章\r\n   */\n  useEffect(() => {\n    validateNewPost();\n  }, [title, content]);\n\n  /**\r\n   * 新規投稿のバリデーションチェック関数\r\n   *\r\n   * @param {string} title 新規投稿のタイトル\r\n   * @param {string} content 新規投稿の文章\r\n   * @param {boolean} setTitleErrorFlag タイトルのエラーフラグの更新関数\r\n   * @param {boolean} setContentErrorFlag 文章のエラーフラグの更新関数\r\n   * @param {boolean} setDisabledFlag 投稿ボタンの活性フラグの更新関数\r\n   * @titleTooLong titleが31文字以上であるかの真偽値\r\n   * @contentTooLong contentgが501文字以上であるかの真偽値\r\n   * @isDisabled タイトルか文章がエラーに該当しているかの真偽値\r\n   */\n  const validateNewPost = () => {\n    const titleTooLong = title.length > 30;\n    setTitleErrorFlag(titleTooLong);\n    const contentTooLong = content.length > 500;\n    setContentErrorFlag(contentTooLong);\n    const isDisabled = titleTooLong || contentTooLong || !title || !content;\n    setDisabledFlag(isDisabled);\n  };\n\n  /**\r\n   * ブログを新規投稿する非同期関数\r\n   *\r\n   * @param {Event} e イベント\r\n   * @param {string} title タイトル\r\n   * @param {string} content 文章\r\n   * @newPost 新規投稿データ\r\n   * @updatedPosts postsプロパティに追加するデータを新規作成したデータ（既存postsデータ＋新規投稿データ）\r\n   * @addAuthUserBlogActions state.authUserBlogにデータを追加するアクションクリエーター\r\n   */\n  const postSubmit = async e => {\n    e.preventDefault(); // フォームのデフォルト送信を防止\n\n    const newPost = {\n      postDate: new Date().toISOString(),\n      title,\n      content\n    };\n    try {\n      const updatedPosts = [...authUserBlogPosts, newPost];\n      await axios.put(`${ENDPOINT_BLOG}/${authUserProfile.id}`, {\n        posts: updatedPosts\n      });\n      dispatch(addAuthUserBlogActions(updatedPosts));\n      navigate('/mypage');\n    } catch (e) {\n      console.error('Error adding new post:', e);\n    }\n\n    // try {\n    //   // まず、ユーザのブログの既存データを取得\n    //   const res = await axios.get(`${ENDPOINT_BLOG}?id=${userState.id}`);\n    //   const blogData = res.data[0];\n\n    //   console.log(authUserBlog); // posts全体のデータ（配列）\n    //   console.log(blogData); // 合致するidが含まれているpostsオブジェクト\n\n    //   // posts配列に新しいポストを追加\n    //   const updatedPosts = [...blogData.posts, newPost];\n\n    //   // オブジェクト全体を更新する\n    //   await axios.put(`${ENDPOINT_BLOG}/${userState.id}`, {\n    //     ...blogData,\n    //     posts: updatedPosts,\n    //   });\n\n    //   // const res = await axios.post(\n    //   //   `${ENDPOINT_BLOG}/keyId=${userState.id}/posts`,\n    //   //   newPost\n    //   // );\n    // } catch (e) {\n    //   console.error('Error adding new post:', e);\n    // }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: postSubmit,\n      className: \"\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"new-post-title-area\",\n        children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n          className: `new-post-title-textbox new-post-title-textbox-${titleErrorFlag}`,\n          value: title,\n          onChange: e => setTitle(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: `new-post-title-length new-post-title-length-${titleErrorFlag}`,\n          children: `${title.length}文字 / 30文字`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"new-post-content-area\",\n        children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n          className: `new-post-content-textbox new-post-content-textbox-${contentErrorFlag}`,\n          value: content,\n          onChange: e => setContent(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: `new-post-content-length new-post-content-length-${contentErrorFlag}`,\n          children: `${content.length}文字 / 500文字`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: `submit-button new-post-submit-button \n          ${disabledFlag ? 'submit-button-disabled' : ''}`,\n        disabled: disabledFlag,\n        children: \"\\u6295\\u7A3F\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_s(NewPost, \"6u2+W7kYyQ2yYeQ89GStrMHsI44=\", false, function () {\n  return [useNavigate, useDispatch, useSelector, useSelector];\n});\n_c = NewPost;\nexport default NewPost;\nvar _c;\n$RefreshReg$(_c, \"NewPost\");","map":{"version":3,"names":["axios","useEffect","useState","useSelector","useDispatch","useNavigate","ENDPOINT_BLOG","addAuthUserBlog","addAuthUserBlogActions","jsxDEV","_jsxDEV","Fragment","_Fragment","NewPost","_s","navigate","dispatch","authUserProfile","state","user","authUserBlogPosts","authUserBlog","posts","title","setTitle","titleErrorFlag","setTitleErrorFlag","content","setContent","contentErrorFlag","setContentErrorFlag","disabledFlag","setDisabledFlag","validateNewPost","titleTooLong","length","contentTooLong","isDisabled","postSubmit","e","preventDefault","newPost","postDate","Date","toISOString","updatedPosts","put","id","console","error","children","onSubmit","className","value","onChange","target","fileName","_jsxFileName","lineNumber","columnNumber","type","disabled","_c","$RefreshReg$"],"sources":["C:/Users/sjamp/Documents/学習/react-guide-material/13_redux/start/src/070_blog/NewPost.js"],"sourcesContent":["import axios from 'axios';\r\nimport { useEffect, useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { ENDPOINT_BLOG } from './consts/const';\r\nimport { addAuthUserBlog as addAuthUserBlogActions } from './store/modules/authUserState';\r\n\r\n/**\r\n * 新規投稿画面\r\n */\r\nconst NewPost = () => {\r\n  const navigate = useNavigate();\r\n  const dispatch = useDispatch();\r\n  const authUserProfile = useSelector((state) => state.user.authUserProfile);\r\n  const authUserBlogPosts = useSelector(\r\n    (state) => state.user.authUserBlog.posts\r\n  );\r\n  const [title, setTitle] = useState(''); // タイトルの入力値の状態管理\r\n  const [titleErrorFlag, setTitleErrorFlag] = useState(false); // タイトルのエラーフラグ\r\n\r\n  const [content, setContent] = useState(''); // 文章の入力値の状態管理\r\n  const [contentErrorFlag, setContentErrorFlag] = useState(false); // 文章のエラーフラグ\r\n\r\n  const [disabledFlag, setDisabledFlag] = useState(true); // 投稿ボタンの活性フラグ\r\n\r\n  /**\r\n   * バリデーションチェック関数を呼び出す処理\r\n   *\r\n   * @validateNewPost 新規投稿のバリデーションチェック関数\r\n   * @param {string} title 新規投稿のタイトル\r\n   * @param {string} content 新規投稿の文章\r\n   */\r\n  useEffect(() => {\r\n    validateNewPost();\r\n  }, [title, content]);\r\n\r\n  /**\r\n   * 新規投稿のバリデーションチェック関数\r\n   *\r\n   * @param {string} title 新規投稿のタイトル\r\n   * @param {string} content 新規投稿の文章\r\n   * @param {boolean} setTitleErrorFlag タイトルのエラーフラグの更新関数\r\n   * @param {boolean} setContentErrorFlag 文章のエラーフラグの更新関数\r\n   * @param {boolean} setDisabledFlag 投稿ボタンの活性フラグの更新関数\r\n   * @titleTooLong titleが31文字以上であるかの真偽値\r\n   * @contentTooLong contentgが501文字以上であるかの真偽値\r\n   * @isDisabled タイトルか文章がエラーに該当しているかの真偽値\r\n   */\r\n  const validateNewPost = () => {\r\n    const titleTooLong = title.length > 30;\r\n    setTitleErrorFlag(titleTooLong);\r\n\r\n    const contentTooLong = content.length > 500;\r\n    setContentErrorFlag(contentTooLong);\r\n\r\n    const isDisabled = titleTooLong || contentTooLong || !title || !content;\r\n    setDisabledFlag(isDisabled);\r\n  };\r\n\r\n  /**\r\n   * ブログを新規投稿する非同期関数\r\n   *\r\n   * @param {Event} e イベント\r\n   * @param {string} title タイトル\r\n   * @param {string} content 文章\r\n   * @newPost 新規投稿データ\r\n   * @updatedPosts postsプロパティに追加するデータを新規作成したデータ（既存postsデータ＋新規投稿データ）\r\n   * @addAuthUserBlogActions state.authUserBlogにデータを追加するアクションクリエーター\r\n   */\r\n  const postSubmit = async (e) => {\r\n    e.preventDefault(); // フォームのデフォルト送信を防止\r\n\r\n    const newPost = {\r\n      postDate: new Date().toISOString(),\r\n      title,\r\n      content,\r\n    };\r\n\r\n    try {\r\n      const updatedPosts = [...authUserBlogPosts, newPost];\r\n\r\n      await axios.put(`${ENDPOINT_BLOG}/${authUserProfile.id}`, {\r\n        posts: updatedPosts,\r\n      });\r\n\r\n      dispatch(addAuthUserBlogActions(updatedPosts));\r\n      navigate('/mypage');\r\n    } catch (e) {\r\n      console.error('Error adding new post:', e);\r\n    }\r\n\r\n    // try {\r\n    //   // まず、ユーザのブログの既存データを取得\r\n    //   const res = await axios.get(`${ENDPOINT_BLOG}?id=${userState.id}`);\r\n    //   const blogData = res.data[0];\r\n\r\n    //   console.log(authUserBlog); // posts全体のデータ（配列）\r\n    //   console.log(blogData); // 合致するidが含まれているpostsオブジェクト\r\n\r\n    //   // posts配列に新しいポストを追加\r\n    //   const updatedPosts = [...blogData.posts, newPost];\r\n\r\n    //   // オブジェクト全体を更新する\r\n    //   await axios.put(`${ENDPOINT_BLOG}/${userState.id}`, {\r\n    //     ...blogData,\r\n    //     posts: updatedPosts,\r\n    //   });\r\n\r\n    //   // const res = await axios.post(\r\n    //   //   `${ENDPOINT_BLOG}/keyId=${userState.id}/posts`,\r\n    //   //   newPost\r\n    //   // );\r\n    // } catch (e) {\r\n    //   console.error('Error adding new post:', e);\r\n    // }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <form onSubmit={postSubmit} className=''>\r\n        <div className='new-post-title-area'>\r\n          <textarea\r\n            className={`new-post-title-textbox new-post-title-textbox-${titleErrorFlag}`}\r\n            value={title}\r\n            onChange={(e) => setTitle(e.target.value)}\r\n          />\r\n          <p\r\n            className={`new-post-title-length new-post-title-length-${titleErrorFlag}`}\r\n          >{`${title.length}文字 / 30文字`}</p>\r\n        </div>\r\n        <div className='new-post-content-area'>\r\n          <textarea\r\n            className={`new-post-content-textbox new-post-content-textbox-${contentErrorFlag}`}\r\n            value={content}\r\n            onChange={(e) => setContent(e.target.value)}\r\n          />\r\n          <p\r\n            className={`new-post-content-length new-post-content-length-${contentErrorFlag}`}\r\n          >{`${content.length}文字 / 500文字`}</p>\r\n        </div>\r\n        <button\r\n          type='submit'\r\n          className={`submit-button new-post-submit-button \r\n          ${disabledFlag ? 'submit-button-disabled' : ''}`}\r\n          disabled={disabledFlag}\r\n        >\r\n          投稿\r\n        </button>\r\n      </form>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default NewPost;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}