{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sjamp\\\\Documents\\\\\\u5B66\\u7FD2\\\\react-guide-material\\\\13_redux\\\\start\\\\src\\\\070_blog\\\\SignUp.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport SignUpName from './components/SignUpName';\nimport SignUpBirthday from './components/SignUpBirthday';\nimport SignUpEmail from './components/SignUpEmail';\nimport SignUpPass from './components/SignUpPass';\nimport SignUpCheckPass from './components/SignUpCheckPass';\nimport ErrorMessage from './components/ErrorMessage';\nimport { ENDPOINT_USER, EMAIL_ALREADY_REGISTERED, FETCH_DATA_FAILURE, NETWORK_ERROR } from './consts/const';\nimport { useNavigate } from 'react-router-dom';\n\n/**\r\n * 新規登録画面\r\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst SignUp = () => {\n  _s();\n  // 氏名の状態管理／氏名のエラーフラグの状態管理\n  const [name, setName] = useState('');\n  const [nameErrorFlag, setNameErrorFlag] = useState(true);\n\n  // 生年月日の状態管理／生年月日のエラーフラグの状態管理\n  const [birthday, setBirthday] = useState('');\n  const [birthdayErrorFlag, setbirthdayErrorFlag] = useState(true);\n\n  // アドレスの状態管理／アドレスのエラーフラグの状態管理\n  const [email, setEmail] = useState('');\n  const [emailErrorFlag, setEmailErrorFlag] = useState(true);\n\n  // パスワードの状態管理／パスワードのエラーフラグの状態管理\n  const [pass, setPass] = useState('');\n  const [passErrorFlag, setPassErrorFlag] = useState(true);\n\n  // 確認パスワードの状態管理／確認パスワードのエラーフラグnお状態管理\n  const [checkPass, setCheckPass] = useState('');\n  const [checkPassErrorFlag, setCheckPassErrorFlag] = useState(true);\n\n  // 規約同意のチェックボックスの状態管理\n  const [isCheck, setIsCheck] = useState(false);\n\n  // 全エラーフラグを集約したエラーフラグの状態管理\n  const [isAllErrorFlag, setIsAllErrorFlag] = useState(true);\n\n  // 登録可能であるかの状態管理\n  const [isRegistrable, setIsRegistrable] = useState(true);\n\n  // エラーメッセージの状態管理\n  const [errorMessage, setErrorMessage] = useState();\n\n  // 全エラーフラグの状態を集約したリスト\n  const allErrorFlags = [nameErrorFlag, birthdayErrorFlag, emailErrorFlag, passErrorFlag, checkPassErrorFlag, !isCheck];\n\n  /**\r\n   * 全体エラーフラグの更新を行う処理\r\n   *\r\n   * @param {function} setIsAllErrorFlag 全エラーフラグを一つの条件にまとめた、登録エラーフラグの更新関数\r\n   * @hasAnyError 全エラーフラグを一つにまとめた真偽値（一つでもfalseだったらfalse）\r\n   * @allErrorFlags 全エラーフラグの状態を集約したリスト\r\n   * @param {boolean} nameErrorFlag 氏名のエラーフラグ\r\n   * @param {boolean} birthdayErrorFlag 生年月日のエラーフラグ\r\n   * @param {boolean} emailErrorFlag アドレスのエラーフラグ\r\n   * @param {boolean} passErrorFlag パスワードのエラーフラグ\r\n   * @param {boolean} checkPassErrorFlag 確認パスワードのエラーフラグ\r\n   * @param {boolean} isCheck 規約同意のチェックボックス\r\n   */\n  useEffect(() => {\n    const hasAnyError = allErrorFlags.some(Boolean);\n    setIsAllErrorFlag(hasAnyError);\n  }, [nameErrorFlag, birthdayErrorFlag, emailErrorFlag, passErrorFlag, checkPassErrorFlag, isCheck]);\n  const navigate = useNavigate();\n\n  /**\r\n   * ユーザの新規登録を行う非同期関数\r\n   *\r\n   * 指定されたメールアドレスで既にユーザが登録されているかをチェックし、\r\n   * 未登録の場合は新規ユーザとして登録を行い、登録後にトップ画面に遷移する。\r\n   * 既に登録がある場合は、既存ユーザであることを示すフラグを更新する。\r\n   *\r\n   * @param {Event} e イベント\r\n   * @param {string} name 氏名の入力値\r\n   * @param {date} birthday 生年月日の入力値\r\n   * @param {string} email アドレスの入力値\r\n   * @param {string} pass パスワードの入力値\r\n   * @param {function} setIsRegisteredEmail 既に登録中のアドレスであるかのフラグの更新関数\r\n   * @resData 指定されたユーザIDのデータを持つデータをAPIリクエストしたレスポンスデータ\r\n   * @getAuthUser ユーザ情報を取得する非同期関数\r\n   * @registerUser 新規登録するデータを集約したオブジェクト\r\n   *\r\n   */\n  const newRegisterUser = async e => {\n    e.preventDefault();\n    try {\n      const resData = await getAuthUser();\n      if (resData.length === 0) {\n        setIsRegistrable(true);\n        const registerUser = {\n          name,\n          birthday,\n          email,\n          pass\n        };\n        await postNewUser(registerUser);\n        navigate('/');\n      } else {\n        setIsRegistrable(false);\n        setErrorMessage(EMAIL_ALREADY_REGISTERED);\n      }\n    } catch (e) {\n      setIsRegistrable(false);\n      setErrorMessage(NETWORK_ERROR);\n      console.error(FETCH_DATA_FAILURE, e);\n    }\n  };\n\n  /**\r\n   * ユーザ情報を取得する非同期関数\r\n   *\r\n   * @param {Event} e イベント\r\n   * @res 指定されたemailを持つデータをAPIにリクエストしたレスポンスオブジェクト\r\n   */\n  const getAuthUser = async e => {\n    try {\n      const res = axios.get(`${ENDPOINT_USER}?email=${email}`);\n      return res.data;\n    } catch (e) {\n      throw new Error(NETWORK_ERROR, e);\n    }\n  };\n\n  /**\r\n   * 新規ユーザ情報を追加する非同期関数\r\n   *\r\n   * @param {Event} e イベント\r\n   * @res 指定されたemailを持つデータをAPIにリクエストしたレスポンスオブジェクト\r\n   */\n  const postNewUser = async (e, registerUser) => {\n    await axios.post(ENDPOINT_USER, registerUser);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"\\u65B0\\u898F\\u767B\\u9332\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: newRegisterUser,\n      className: \"signup-form\",\n      children: [/*#__PURE__*/_jsxDEV(SignUpName, {\n        nameState: [name, setName],\n        nameErrorFlag: [nameErrorFlag, setNameErrorFlag]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(SignUpBirthday, {\n        birthdayState: [birthday, setBirthday],\n        birthdayErrorFlag: [birthdayErrorFlag, setbirthdayErrorFlag]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(SignUpEmail, {\n        emailState: [email, setEmail],\n        emailErrorFlag: [emailErrorFlag, setEmailErrorFlag]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(SignUpPass, {\n        passState: [pass, setPass],\n        passErrorFlag: [passErrorFlag, setPassErrorFlag]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(SignUpCheckPass, {\n        passState: pass,\n        checkPassState: [checkPass, setCheckPass],\n        checkPassErrorFlag: [checkPassErrorFlag, setCheckPassErrorFlag]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"checkbox-container\",\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            checked: isCheck,\n            onChange: () => setIsCheck(!isCheck),\n            className: \"input-checkbox\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 13\n          }, this), \"\\u898F\\u7D04\\u540C\\u610F\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: `submit-button ${isAllErrorFlag ? 'submit-button-disabled' : ''}`,\n        disabled: isAllErrorFlag,\n        children: \"\\u767B\\u9332\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 7\n    }, this), !isRegistrable && /*#__PURE__*/_jsxDEV(ErrorMessage, {\n      message: errorMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 26\n    }, this)]\n  }, void 0, true);\n};\n_s(SignUp, \"9HsjFwIhN3dffts7NwcRW7BF+6Q=\", false, function () {\n  return [useNavigate];\n});\n_c = SignUp;\nexport default SignUp;\nvar _c;\n$RefreshReg$(_c, \"SignUp\");","map":{"version":3,"names":["useState","useEffect","axios","SignUpName","SignUpBirthday","SignUpEmail","SignUpPass","SignUpCheckPass","ErrorMessage","ENDPOINT_USER","EMAIL_ALREADY_REGISTERED","FETCH_DATA_FAILURE","NETWORK_ERROR","useNavigate","jsxDEV","_jsxDEV","Fragment","_Fragment","SignUp","_s","name","setName","nameErrorFlag","setNameErrorFlag","birthday","setBirthday","birthdayErrorFlag","setbirthdayErrorFlag","email","setEmail","emailErrorFlag","setEmailErrorFlag","pass","setPass","passErrorFlag","setPassErrorFlag","checkPass","setCheckPass","checkPassErrorFlag","setCheckPassErrorFlag","isCheck","setIsCheck","isAllErrorFlag","setIsAllErrorFlag","isRegistrable","setIsRegistrable","errorMessage","setErrorMessage","allErrorFlags","hasAnyError","some","Boolean","navigate","newRegisterUser","e","preventDefault","resData","getAuthUser","length","registerUser","postNewUser","console","error","res","get","data","Error","post","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","className","nameState","birthdayState","emailState","passState","checkPassState","type","checked","onChange","disabled","message","_c","$RefreshReg$"],"sources":["C:/Users/sjamp/Documents/学習/react-guide-material/13_redux/start/src/070_blog/SignUp.js"],"sourcesContent":["import { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport SignUpName from './components/SignUpName';\r\nimport SignUpBirthday from './components/SignUpBirthday';\r\nimport SignUpEmail from './components/SignUpEmail';\r\nimport SignUpPass from './components/SignUpPass';\r\nimport SignUpCheckPass from './components/SignUpCheckPass';\r\nimport ErrorMessage from './components/ErrorMessage';\r\nimport {\r\n  ENDPOINT_USER,\r\n  EMAIL_ALREADY_REGISTERED,\r\n  FETCH_DATA_FAILURE,\r\n  NETWORK_ERROR,\r\n} from './consts/const';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\n/**\r\n * 新規登録画面\r\n */\r\nconst SignUp = () => {\r\n  // 氏名の状態管理／氏名のエラーフラグの状態管理\r\n  const [name, setName] = useState('');\r\n  const [nameErrorFlag, setNameErrorFlag] = useState(true);\r\n\r\n  // 生年月日の状態管理／生年月日のエラーフラグの状態管理\r\n  const [birthday, setBirthday] = useState('');\r\n  const [birthdayErrorFlag, setbirthdayErrorFlag] = useState(true);\r\n\r\n  // アドレスの状態管理／アドレスのエラーフラグの状態管理\r\n  const [email, setEmail] = useState('');\r\n  const [emailErrorFlag, setEmailErrorFlag] = useState(true);\r\n\r\n  // パスワードの状態管理／パスワードのエラーフラグの状態管理\r\n  const [pass, setPass] = useState('');\r\n  const [passErrorFlag, setPassErrorFlag] = useState(true);\r\n\r\n  // 確認パスワードの状態管理／確認パスワードのエラーフラグnお状態管理\r\n  const [checkPass, setCheckPass] = useState('');\r\n  const [checkPassErrorFlag, setCheckPassErrorFlag] = useState(true);\r\n\r\n  // 規約同意のチェックボックスの状態管理\r\n  const [isCheck, setIsCheck] = useState(false);\r\n\r\n  // 全エラーフラグを集約したエラーフラグの状態管理\r\n  const [isAllErrorFlag, setIsAllErrorFlag] = useState(true);\r\n\r\n  // 登録可能であるかの状態管理\r\n  const [isRegistrable, setIsRegistrable] = useState(true);\r\n\r\n  // エラーメッセージの状態管理\r\n  const [errorMessage, setErrorMessage] = useState();\r\n\r\n  // 全エラーフラグの状態を集約したリスト\r\n  const allErrorFlags = [\r\n    nameErrorFlag,\r\n    birthdayErrorFlag,\r\n    emailErrorFlag,\r\n    passErrorFlag,\r\n    checkPassErrorFlag,\r\n    !isCheck,\r\n  ];\r\n\r\n  /**\r\n   * 全体エラーフラグの更新を行う処理\r\n   *\r\n   * @param {function} setIsAllErrorFlag 全エラーフラグを一つの条件にまとめた、登録エラーフラグの更新関数\r\n   * @hasAnyError 全エラーフラグを一つにまとめた真偽値（一つでもfalseだったらfalse）\r\n   * @allErrorFlags 全エラーフラグの状態を集約したリスト\r\n   * @param {boolean} nameErrorFlag 氏名のエラーフラグ\r\n   * @param {boolean} birthdayErrorFlag 生年月日のエラーフラグ\r\n   * @param {boolean} emailErrorFlag アドレスのエラーフラグ\r\n   * @param {boolean} passErrorFlag パスワードのエラーフラグ\r\n   * @param {boolean} checkPassErrorFlag 確認パスワードのエラーフラグ\r\n   * @param {boolean} isCheck 規約同意のチェックボックス\r\n   */\r\n  useEffect(() => {\r\n    const hasAnyError = allErrorFlags.some(Boolean);\r\n    setIsAllErrorFlag(hasAnyError);\r\n  }, [\r\n    nameErrorFlag,\r\n    birthdayErrorFlag,\r\n    emailErrorFlag,\r\n    passErrorFlag,\r\n    checkPassErrorFlag,\r\n    isCheck,\r\n  ]);\r\n\r\n  const navigate = useNavigate();\r\n\r\n  /**\r\n   * ユーザの新規登録を行う非同期関数\r\n   *\r\n   * 指定されたメールアドレスで既にユーザが登録されているかをチェックし、\r\n   * 未登録の場合は新規ユーザとして登録を行い、登録後にトップ画面に遷移する。\r\n   * 既に登録がある場合は、既存ユーザであることを示すフラグを更新する。\r\n   *\r\n   * @param {Event} e イベント\r\n   * @param {string} name 氏名の入力値\r\n   * @param {date} birthday 生年月日の入力値\r\n   * @param {string} email アドレスの入力値\r\n   * @param {string} pass パスワードの入力値\r\n   * @param {function} setIsRegisteredEmail 既に登録中のアドレスであるかのフラグの更新関数\r\n   * @resData 指定されたユーザIDのデータを持つデータをAPIリクエストしたレスポンスデータ\r\n   * @getAuthUser ユーザ情報を取得する非同期関数\r\n   * @registerUser 新規登録するデータを集約したオブジェクト\r\n   *\r\n   */\r\n  const newRegisterUser = async (e) => {\r\n    e.preventDefault();\r\n\r\n    try {\r\n      const resData = await getAuthUser();\r\n      if (resData.length === 0) {\r\n        setIsRegistrable(true);\r\n        const registerUser = { name, birthday, email, pass };\r\n        await postNewUser(registerUser);\r\n        navigate('/');\r\n      } else {\r\n        setIsRegistrable(false);\r\n        setErrorMessage(EMAIL_ALREADY_REGISTERED);\r\n      }\r\n    } catch (e) {\r\n      setIsRegistrable(false);\r\n      setErrorMessage(NETWORK_ERROR);\r\n      console.error(FETCH_DATA_FAILURE, e);\r\n    }\r\n  };\r\n\r\n  /**\r\n   * ユーザ情報を取得する非同期関数\r\n   *\r\n   * @param {Event} e イベント\r\n   * @res 指定されたemailを持つデータをAPIにリクエストしたレスポンスオブジェクト\r\n   */\r\n  const getAuthUser = async (e) => {\r\n    try {\r\n      const res = axios.get(`${ENDPOINT_USER}?email=${email}`);\r\n      return res.data;\r\n    } catch (e) {\r\n      throw new Error(NETWORK_ERROR, e);\r\n    }\r\n  };\r\n\r\n  /**\r\n   * 新規ユーザ情報を追加する非同期関数\r\n   *\r\n   * @param {Event} e イベント\r\n   * @res 指定されたemailを持つデータをAPIにリクエストしたレスポンスオブジェクト\r\n   */\r\n  const postNewUser = async (e, registerUser) => {\r\n    await axios.post(ENDPOINT_USER, registerUser);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <h1>新規登録</h1>\r\n      <form onSubmit={newRegisterUser} className='signup-form'>\r\n        <SignUpName\r\n          nameState={[name, setName]}\r\n          nameErrorFlag={[nameErrorFlag, setNameErrorFlag]}\r\n        />\r\n        <SignUpBirthday\r\n          birthdayState={[birthday, setBirthday]}\r\n          birthdayErrorFlag={[birthdayErrorFlag, setbirthdayErrorFlag]}\r\n        />\r\n        <SignUpEmail\r\n          emailState={[email, setEmail]}\r\n          emailErrorFlag={[emailErrorFlag, setEmailErrorFlag]}\r\n        />\r\n        <SignUpPass\r\n          passState={[pass, setPass]}\r\n          passErrorFlag={[passErrorFlag, setPassErrorFlag]}\r\n        />\r\n        <SignUpCheckPass\r\n          passState={pass}\r\n          checkPassState={[checkPass, setCheckPass]}\r\n          checkPassErrorFlag={[checkPassErrorFlag, setCheckPassErrorFlag]}\r\n        />\r\n        <div className='checkbox-container'>\r\n          <label>\r\n            <input\r\n              type='checkbox'\r\n              checked={isCheck}\r\n              onChange={() => setIsCheck(!isCheck)}\r\n              className='input-checkbox'\r\n            />\r\n            規約同意\r\n          </label>\r\n        </div>\r\n        <button\r\n          type='submit'\r\n          className={`submit-button ${\r\n            isAllErrorFlag ? 'submit-button-disabled' : ''\r\n          }`}\r\n          disabled={isAllErrorFlag}\r\n        >\r\n          登録\r\n        </button>\r\n      </form>\r\n      {!isRegistrable && <ErrorMessage message={errorMessage} />}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SignUp;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}