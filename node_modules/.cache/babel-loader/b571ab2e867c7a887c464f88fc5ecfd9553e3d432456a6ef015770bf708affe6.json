{"ast":null,"code":"import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nimport { asyncCount } from '../../api/counter';\nconst counter = createSlice({\n  name: 'counter',\n  initialState: {\n    count: 0,\n    status: ''\n  },\n  reducers: {},\n  extraReducers(builder) {\n    builder.addCase(addAsyncWithStatus.pending, state => {\n      state.status = 'Loading...';\n    }).addCase(addAsyncWithStatus.fulfilled, (state, actions) => {\n      state.status = '取得済';\n      state.count += actions.payload;\n    }).addCase(addAsyncWithStatus.rejected, state => {\n      state.status = 'エラー';\n    });\n  }\n});\nconst addAsyncWithStatus = createAsyncThunk('counter/asyncCount', async payload => {\n  const res = await asyncCount(payload);\n  return res.data;\n});\nexport { addAsyncWithStatus };\nexport default counter.reducer;","map":{"version":3,"names":["createAsyncThunk","createSlice","asyncCount","counter","name","initialState","count","status","reducers","extraReducers","builder","addCase","addAsyncWithStatus","pending","state","fulfilled","actions","payload","rejected","res","data","reducer"],"sources":["C:/Users/sjamp/Documents/学習/react-guide-material/13_redux/start/src/060_createAsyncThunk/store/modules/counter.js"],"sourcesContent":["import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\r\n\r\nimport { asyncCount } from '../../api/counter';\r\n\r\nconst counter = createSlice({\r\n  name: 'counter',\r\n  initialState: { count: 0, status: '' },\r\n  reducers: {},\r\n  extraReducers(builder) {\r\n    builder\r\n      .addCase(addAsyncWithStatus.pending, (state) => {\r\n        state.status = 'Loading...';\r\n      })\r\n      .addCase(addAsyncWithStatus.fulfilled, (state, actions) => {\r\n        state.status = '取得済';\r\n        state.count += actions.payload;\r\n      })\r\n      .addCase(addAsyncWithStatus.rejected, (state) => {\r\n        state.status = 'エラー';\r\n      });\r\n  },\r\n});\r\n\r\nconst addAsyncWithStatus = createAsyncThunk(\r\n  'counter/asyncCount',\r\n  async (payload) => {\r\n    const res = await asyncCount(payload);\r\n    return res.data;\r\n  }\r\n);\r\n\r\nexport { addAsyncWithStatus };\r\nexport default counter.reducer;\r\n"],"mappings":"AAAA,SAASA,gBAAgB,EAAEC,WAAW,QAAQ,kBAAkB;AAEhE,SAASC,UAAU,QAAQ,mBAAmB;AAE9C,MAAMC,OAAO,GAAGF,WAAW,CAAC;EAC1BG,IAAI,EAAE,SAAS;EACfC,YAAY,EAAE;IAAEC,KAAK,EAAE,CAAC;IAAEC,MAAM,EAAE;EAAG,CAAC;EACtCC,QAAQ,EAAE,CAAC,CAAC;EACZC,aAAaA,CAACC,OAAO,EAAE;IACrBA,OAAO,CACJC,OAAO,CAACC,kBAAkB,CAACC,OAAO,EAAGC,KAAK,IAAK;MAC9CA,KAAK,CAACP,MAAM,GAAG,YAAY;IAC7B,CAAC,CAAC,CACDI,OAAO,CAACC,kBAAkB,CAACG,SAAS,EAAE,CAACD,KAAK,EAAEE,OAAO,KAAK;MACzDF,KAAK,CAACP,MAAM,GAAG,KAAK;MACpBO,KAAK,CAACR,KAAK,IAAIU,OAAO,CAACC,OAAO;IAChC,CAAC,CAAC,CACDN,OAAO,CAACC,kBAAkB,CAACM,QAAQ,EAAGJ,KAAK,IAAK;MAC/CA,KAAK,CAACP,MAAM,GAAG,KAAK;IACtB,CAAC,CAAC;EACN;AACF,CAAC,CAAC;AAEF,MAAMK,kBAAkB,GAAGZ,gBAAgB,CACzC,oBAAoB,EACpB,MAAOiB,OAAO,IAAK;EACjB,MAAME,GAAG,GAAG,MAAMjB,UAAU,CAACe,OAAO,CAAC;EACrC,OAAOE,GAAG,CAACC,IAAI;AACjB,CACF,CAAC;AAED,SAASR,kBAAkB;AAC3B,eAAeT,OAAO,CAACkB,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}