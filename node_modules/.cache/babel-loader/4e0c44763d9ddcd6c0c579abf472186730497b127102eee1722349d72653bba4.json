{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sjamp\\\\Documents\\\\\\u5B66\\u7FD2\\\\react-guide-material\\\\13_redux\\\\start\\\\src\\\\070_middleware\\\\components\\\\TodoContents.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { fetchTodoData, addTodo, deleteTodo } from '../store/modules/todo';\nimport { TODO_ENDPOINT } from '../consts/todoConsts';\nimport Todo from './Todo';\nimport Input from './Input';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst TodoContents = () => {\n  _s();\n  const dispatch = useDispatch();\n\n  // 入力値の状態管理\n  const [inputVal, setInputVal] = useState('');\n\n  // stateのtodoListを取得\n  const todoList = useSelector(state => state.todoReducer.todoList);\n\n  // JSONからTodoListデータを取得\n  useEffect(() => {\n    dispatch(fetchTodoData());\n  }, []);\n\n  // todoListに新規追加を行う関数\n  // JSONにデータを追加し、追加された最新データを受け取る\n  // stateのtodoListにも新規追加し、入力フォーム値を削除\n  const addTodoList = async () => {\n    if (inputVal) {\n      const newTodo = {\n        content: inputVal,\n        editing: false\n      };\n      const res = await axios.post(TODO_ENDPOINT, newTodo);\n      dispatch(addTodo(res.data));\n      setInputVal('');\n    }\n  };\n\n  // todoListから削除を行う関数\n  // JSONのデータから削除し、stateのtodoListからも削除\n  const complete = async id => {\n    dispatch(deleteTodo({\n      id\n    }));\n    await axios.delete(TODO_ENDPOINT + '/' + id);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: styles.todoContainer,\n      children: [todoList.map(todo => /*#__PURE__*/_jsxDEV(Todo, {\n        todo: todo,\n        complete: complete\n      }, todo.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(Input, {\n        inputState: [inputVal, setInputVal],\n        addTodoList: addTodoList\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_s(TodoContents, \"DKnospzmy1/mLXaKWWnaa4sgfHc=\", false, function () {\n  return [useDispatch, useSelector];\n});\n_c = TodoContents;\nexport default TodoContents;\nconst styles = {\n  todoContainer: {\n    margin: '0 300px',\n    textAlign: 'left'\n  }\n};\nvar _c;\n$RefreshReg$(_c, \"TodoContents\");","map":{"version":3,"names":["useState","useEffect","useSelector","useDispatch","fetchTodoData","addTodo","deleteTodo","TODO_ENDPOINT","Todo","Input","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","TodoContents","_s","dispatch","inputVal","setInputVal","todoList","state","todoReducer","addTodoList","newTodo","content","editing","res","post","data","complete","id","delete","children","style","styles","todoContainer","map","todo","fileName","_jsxFileName","lineNumber","columnNumber","inputState","_c","margin","textAlign","$RefreshReg$"],"sources":["C:/Users/sjamp/Documents/学習/react-guide-material/13_redux/start/src/070_middleware/components/TodoContents.js"],"sourcesContent":["import { useState, useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { fetchTodoData, addTodo, deleteTodo } from '../store/modules/todo';\r\nimport { TODO_ENDPOINT } from '../consts/todoConsts';\r\nimport Todo from './Todo';\r\nimport Input from './Input';\r\nimport axios from 'axios';\r\n\r\nconst TodoContents = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  // 入力値の状態管理\r\n  const [inputVal, setInputVal] = useState('');\r\n\r\n  // stateのtodoListを取得\r\n  const todoList = useSelector((state) => state.todoReducer.todoList);\r\n\r\n  // JSONからTodoListデータを取得\r\n  useEffect(() => {\r\n    dispatch(fetchTodoData());\r\n  }, []);\r\n\r\n  // todoListに新規追加を行う関数\r\n  // JSONにデータを追加し、追加された最新データを受け取る\r\n  // stateのtodoListにも新規追加し、入力フォーム値を削除\r\n  const addTodoList = async () => {\r\n    if (inputVal) {\r\n      const newTodo = { content: inputVal, editing: false };\r\n      const res = await axios.post(TODO_ENDPOINT, newTodo);\r\n      dispatch(addTodo(res.data));\r\n      setInputVal('');\r\n    }\r\n  };\r\n\r\n  // todoListから削除を行う関数\r\n  // JSONのデータから削除し、stateのtodoListからも削除\r\n  const complete = async (id) => {\r\n    dispatch(deleteTodo({ id }));\r\n    await axios.delete(TODO_ENDPOINT + '/' + id);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div style={styles.todoContainer}>\r\n        {todoList.map((todo) => (\r\n          <Todo todo={todo} complete={complete} key={todo.id} />\r\n        ))}\r\n        <Input inputState={[inputVal, setInputVal]} addTodoList={addTodoList} />\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TodoContents;\r\n\r\nconst styles = {\r\n  todoContainer: {\r\n    margin: '0 300px',\r\n    textAlign: 'left',\r\n  },\r\n};\r\n"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SAASC,aAAa,EAAEC,OAAO,EAAEC,UAAU,QAAQ,uBAAuB;AAC1E,SAASC,aAAa,QAAQ,sBAAsB;AACpD,OAAOC,IAAI,MAAM,QAAQ;AACzB,OAAOC,KAAK,MAAM,SAAS;AAC3B,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE1B,MAAMC,YAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACzB,MAAMC,QAAQ,GAAGd,WAAW,CAAC,CAAC;;EAE9B;EACA,MAAM,CAACe,QAAQ,EAAEC,WAAW,CAAC,GAAGnB,QAAQ,CAAC,EAAE,CAAC;;EAE5C;EACA,MAAMoB,QAAQ,GAAGlB,WAAW,CAAEmB,KAAK,IAAKA,KAAK,CAACC,WAAW,CAACF,QAAQ,CAAC;;EAEnE;EACAnB,SAAS,CAAC,MAAM;IACdgB,QAAQ,CAACb,aAAa,CAAC,CAAC,CAAC;EAC3B,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA;EACA;EACA,MAAMmB,WAAW,GAAG,MAAAA,CAAA,KAAY;IAC9B,IAAIL,QAAQ,EAAE;MACZ,MAAMM,OAAO,GAAG;QAAEC,OAAO,EAAEP,QAAQ;QAAEQ,OAAO,EAAE;MAAM,CAAC;MACrD,MAAMC,GAAG,GAAG,MAAMjB,KAAK,CAACkB,IAAI,CAACrB,aAAa,EAAEiB,OAAO,CAAC;MACpDP,QAAQ,CAACZ,OAAO,CAACsB,GAAG,CAACE,IAAI,CAAC,CAAC;MAC3BV,WAAW,CAAC,EAAE,CAAC;IACjB;EACF,CAAC;;EAED;EACA;EACA,MAAMW,QAAQ,GAAG,MAAOC,EAAE,IAAK;IAC7Bd,QAAQ,CAACX,UAAU,CAAC;MAAEyB;IAAG,CAAC,CAAC,CAAC;IAC5B,MAAMrB,KAAK,CAACsB,MAAM,CAACzB,aAAa,GAAG,GAAG,GAAGwB,EAAE,CAAC;EAC9C,CAAC;EAED,oBACEnB,OAAA,CAAAE,SAAA;IAAAmB,QAAA,eACErB,OAAA;MAAKsB,KAAK,EAAEC,MAAM,CAACC,aAAc;MAAAH,QAAA,GAC9Bb,QAAQ,CAACiB,GAAG,CAAEC,IAAI,iBACjB1B,OAAA,CAACJ,IAAI;QAAC8B,IAAI,EAAEA,IAAK;QAACR,QAAQ,EAAEA;MAAS,GAAMQ,IAAI,CAACP,EAAE;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CACtD,CAAC,eACF9B,OAAA,CAACH,KAAK;QAACkC,UAAU,EAAE,CAACzB,QAAQ,EAAEC,WAAW,CAAE;QAACI,WAAW,EAAEA;MAAY;QAAAgB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACrE;EAAC,gBACN,CAAC;AAEP,CAAC;AAAC1B,EAAA,CA3CID,YAAY;EAAA,QACCZ,WAAW,EAMXD,WAAW;AAAA;AAAA0C,EAAA,GAPxB7B,YAAY;AA6ClB,eAAeA,YAAY;AAE3B,MAAMoB,MAAM,GAAG;EACbC,aAAa,EAAE;IACbS,MAAM,EAAE,SAAS;IACjBC,SAAS,EAAE;EACb;AACF,CAAC;AAAC,IAAAF,EAAA;AAAAG,YAAA,CAAAH,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}