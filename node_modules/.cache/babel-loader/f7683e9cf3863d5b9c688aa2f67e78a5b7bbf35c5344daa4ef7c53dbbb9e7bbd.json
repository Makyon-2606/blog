{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sjamp\\\\Documents\\\\\\u5B66\\u7FD2\\\\react-guide-material\\\\13_redux\\\\start\\\\src\\\\070_blog\\\\components\\\\CheckPassValidate.js\",\n  _s = $RefreshSig$();\nimport { useCallback, useEffect, useState } from 'react';\nimport ErrorMessage from './ErrorMessage';\nimport { PASSWORD_MISMATCH } from '../consts/const';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst CheckPassValidate = ({\n  passState,\n  checkPassState,\n  checkPassErrorFlag,\n  placeholder\n}) => {\n  _s();\n  const pass = passState; // パスワード入力値の状態管理（props）\n  const [checkPass, setCheckPass] = checkPassState; //  パスワード（確認）入力値の状態管理（props）\n  const [errorFlag, setErrorFlag] = checkPassErrorFlag; // パスワード（確認）入力値のエラーフラグ（props）\n  const [isFirstInputPass, setIsFirstInputPass] = useState(false); // パスワード（確認）の初期入力フラグ\n\n  // 確認パスワードのバリデーションチェックを行う関数\n  const validatePassword = useCallback(() => {\n    pass === checkPass ? setErrorFlag(false) : setErrorFlag(true);\n  }, [pass, checkPass]);\n\n  // パスワード、確認パスワード、初期入力フラグが更新されたとき、バリデーションチェック関数を呼び出す\n  useEffect(() => {\n    validatePassword();\n  }, [pass, checkPass, isFirstInputPass]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      placeholder: \"\\u78BA\\u8A8D\\u30D1\\u30B9\\u30EF\\u30FC\\u30C9\",\n      value: checkPass,\n      onChange: e => {\n        setCheckPass(e.target.value);\n      },\n      onBlur: () => setIsFirstInputPass(true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), isFirstInputPass && errorFlag && /*#__PURE__*/_jsxDEV(ErrorMessage, {\n      message: PASSWORD_MISMATCH\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n_s(CheckPassValidate, \"YwVp9obflsCh1DUT1OGLYtqMXJQ=\");\n_c = CheckPassValidate;\nexport default CheckPassValidate;\nvar _c;\n$RefreshReg$(_c, \"CheckPassValidate\");","map":{"version":3,"names":["useCallback","useEffect","useState","ErrorMessage","PASSWORD_MISMATCH","jsxDEV","_jsxDEV","Fragment","_Fragment","CheckPassValidate","passState","checkPassState","checkPassErrorFlag","placeholder","_s","pass","checkPass","setCheckPass","errorFlag","setErrorFlag","isFirstInputPass","setIsFirstInputPass","validatePassword","children","type","value","onChange","e","target","onBlur","fileName","_jsxFileName","lineNumber","columnNumber","message","_c","$RefreshReg$"],"sources":["C:/Users/sjamp/Documents/学習/react-guide-material/13_redux/start/src/070_blog/components/CheckPassValidate.js"],"sourcesContent":["import { useCallback, useEffect, useState } from 'react';\r\nimport ErrorMessage from './ErrorMessage';\r\nimport { PASSWORD_MISMATCH } from '../consts/const';\r\n\r\nconst CheckPassValidate = ({\r\n  passState,\r\n  checkPassState,\r\n  checkPassErrorFlag,\r\n  placeholder,\r\n}) => {\r\n  const pass = passState; // パスワード入力値の状態管理（props）\r\n  const [checkPass, setCheckPass] = checkPassState; //  パスワード（確認）入力値の状態管理（props）\r\n  const [errorFlag, setErrorFlag] = checkPassErrorFlag; // パスワード（確認）入力値のエラーフラグ（props）\r\n  const [isFirstInputPass, setIsFirstInputPass] = useState(false); // パスワード（確認）の初期入力フラグ\r\n\r\n  // 確認パスワードのバリデーションチェックを行う関数\r\n  const validatePassword = useCallback(() => {\r\n    pass === checkPass ? setErrorFlag(false) : setErrorFlag(true);\r\n  }, [pass, checkPass]);\r\n\r\n  // パスワード、確認パスワード、初期入力フラグが更新されたとき、バリデーションチェック関数を呼び出す\r\n  useEffect(() => {\r\n    validatePassword();\r\n  }, [pass, checkPass, isFirstInputPass]);\r\n\r\n  return (\r\n    <>\r\n      <input\r\n        type='password'\r\n        placeholder='確認パスワード'\r\n        value={checkPass}\r\n        onChange={(e) => {\r\n          setCheckPass(e.target.value);\r\n        }}\r\n        onBlur={() => setIsFirstInputPass(true)}\r\n      />\r\n      {isFirstInputPass && errorFlag && (\r\n        <ErrorMessage message={PASSWORD_MISMATCH} />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CheckPassValidate;\r\n"],"mappings":";;AAAA,SAASA,WAAW,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AACxD,OAAOC,YAAY,MAAM,gBAAgB;AACzC,SAASC,iBAAiB,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEpD,MAAMC,iBAAiB,GAAGA,CAAC;EACzBC,SAAS;EACTC,cAAc;EACdC,kBAAkB;EAClBC;AACF,CAAC,KAAK;EAAAC,EAAA;EACJ,MAAMC,IAAI,GAAGL,SAAS,CAAC,CAAC;EACxB,MAAM,CAACM,SAAS,EAAEC,YAAY,CAAC,GAAGN,cAAc,CAAC,CAAC;EAClD,MAAM,CAACO,SAAS,EAAEC,YAAY,CAAC,GAAGP,kBAAkB,CAAC,CAAC;EACtD,MAAM,CAACQ,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGnB,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC;;EAEjE;EACA,MAAMoB,gBAAgB,GAAGtB,WAAW,CAAC,MAAM;IACzCe,IAAI,KAAKC,SAAS,GAAGG,YAAY,CAAC,KAAK,CAAC,GAAGA,YAAY,CAAC,IAAI,CAAC;EAC/D,CAAC,EAAE,CAACJ,IAAI,EAAEC,SAAS,CAAC,CAAC;;EAErB;EACAf,SAAS,CAAC,MAAM;IACdqB,gBAAgB,CAAC,CAAC;EACpB,CAAC,EAAE,CAACP,IAAI,EAAEC,SAAS,EAAEI,gBAAgB,CAAC,CAAC;EAEvC,oBACEd,OAAA,CAAAE,SAAA;IAAAe,QAAA,gBACEjB,OAAA;MACEkB,IAAI,EAAC,UAAU;MACfX,WAAW,EAAC,4CAAS;MACrBY,KAAK,EAAET,SAAU;MACjBU,QAAQ,EAAGC,CAAC,IAAK;QACfV,YAAY,CAACU,CAAC,CAACC,MAAM,CAACH,KAAK,CAAC;MAC9B,CAAE;MACFI,MAAM,EAAEA,CAAA,KAAMR,mBAAmB,CAAC,IAAI;IAAE;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACzC,CAAC,EACDb,gBAAgB,IAAIF,SAAS,iBAC5BZ,OAAA,CAACH,YAAY;MAAC+B,OAAO,EAAE9B;IAAkB;MAAA0B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAC5C;EAAA,eACD,CAAC;AAEP,CAAC;AAACnB,EAAA,CArCIL,iBAAiB;AAAA0B,EAAA,GAAjB1B,iBAAiB;AAuCvB,eAAeA,iBAAiB;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}