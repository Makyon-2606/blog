{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sjamp\\\\Documents\\\\\\u5B66\\u7FD2\\\\react-guide-material\\\\13_redux\\\\start\\\\src\\\\070_blog\\\\components\\\\SignUpEmail.js\",\n  _s = $RefreshSig$();\nimport { useCallback, useEffect } from 'react';\nimport ErrorMessage from './ErrorMessage';\nimport { EMAIL_INVALID, EMAIL_VALIDATION_PATTERN } from '../consts/const';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst SignUpPass = ({\n  emailState,\n  firstInputEmail,\n  errorEmail\n}) => {\n  _s();\n  const [email, setEmail] = emailState;\n  const [isFirstInputEmail, setIsFirstInputEmail] = firstInputEmail;\n  const [isErrorEmail, setIsErrorEmail] = errorEmail;\n\n  // メールアドレスのバリデーションチェックを行う関数\n  const validateEmail = useCallback(() => {\n    const isEmailValid = EMAIL_VALIDATION_PATTERN.test(email); // メールアドレス形式が正しいか\n\n    setIsErrorEmail(!isEmailValid); // バリデーション結果に応じて真偽値を代入\n  }, [email]);\n\n  // 初期入力時のみ、バリデーションを実行しない\n  useEffect(() => {\n    if (isFirstInputEmail) {\n      validateEmail();\n    }\n  }, [isFirstInputEmail, validateEmail]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"email\",\n      placeholder: \"\\u30E1\\u30FC\\u30EB\\u30A2\\u30C9\\u30EC\\u30B9\",\n      value: email,\n      onChange: e => {\n        setEmail(e.target.value);\n      },\n      onBlur: () => {\n        setIsFirstInputEmail(true);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), isErrorEmail && /*#__PURE__*/_jsxDEV(ErrorMessage, {\n      message: EMAIL_INVALID\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 24\n    }, this)]\n  }, void 0, true);\n};\n_s(SignUpPass, \"cZzV7rx/wjDvI2GGo3qNlHSqyyU=\");\n_c = SignUpPass;\nexport default SignUpPass;\nvar _c;\n$RefreshReg$(_c, \"SignUpPass\");","map":{"version":3,"names":["useCallback","useEffect","ErrorMessage","EMAIL_INVALID","EMAIL_VALIDATION_PATTERN","jsxDEV","_jsxDEV","Fragment","_Fragment","SignUpPass","emailState","firstInputEmail","errorEmail","_s","email","setEmail","isFirstInputEmail","setIsFirstInputEmail","isErrorEmail","setIsErrorEmail","validateEmail","isEmailValid","test","children","type","placeholder","value","onChange","e","target","onBlur","fileName","_jsxFileName","lineNumber","columnNumber","message","_c","$RefreshReg$"],"sources":["C:/Users/sjamp/Documents/学習/react-guide-material/13_redux/start/src/070_blog/components/SignUpEmail.js"],"sourcesContent":["import { useCallback, useEffect } from 'react';\r\nimport ErrorMessage from './ErrorMessage';\r\nimport { EMAIL_INVALID, EMAIL_VALIDATION_PATTERN } from '../consts/const';\r\n\r\nconst SignUpPass = ({ emailState, firstInputEmail, errorEmail }) => {\r\n  const [email, setEmail] = emailState;\r\n  const [isFirstInputEmail, setIsFirstInputEmail] = firstInputEmail;\r\n  const [isErrorEmail, setIsErrorEmail] = errorEmail;\r\n\r\n  // メールアドレスのバリデーションチェックを行う関数\r\n  const validateEmail = useCallback(() => {\r\n    const isEmailValid = EMAIL_VALIDATION_PATTERN.test(email); // メールアドレス形式が正しいか\r\n\r\n    setIsErrorEmail(!isEmailValid); // バリデーション結果に応じて真偽値を代入\r\n  }, [email]);\r\n\r\n  // 初期入力時のみ、バリデーションを実行しない\r\n  useEffect(() => {\r\n    if (isFirstInputEmail) {\r\n      validateEmail();\r\n    }\r\n  }, [isFirstInputEmail, validateEmail]);\r\n\r\n  return (\r\n    <>\r\n      <input\r\n        type='email'\r\n        placeholder='メールアドレス'\r\n        value={email}\r\n        onChange={(e) => {\r\n          setEmail(e.target.value);\r\n        }}\r\n        onBlur={() => {\r\n          setIsFirstInputEmail(true);\r\n        }}\r\n      />\r\n      {isErrorEmail && <ErrorMessage message={EMAIL_INVALID} />}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SignUpPass;\r\n"],"mappings":";;AAAA,SAASA,WAAW,EAAEC,SAAS,QAAQ,OAAO;AAC9C,OAAOC,YAAY,MAAM,gBAAgB;AACzC,SAASC,aAAa,EAAEC,wBAAwB,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE1E,MAAMC,UAAU,GAAGA,CAAC;EAAEC,UAAU;EAAEC,eAAe;EAAEC;AAAW,CAAC,KAAK;EAAAC,EAAA;EAClE,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGL,UAAU;EACpC,MAAM,CAACM,iBAAiB,EAAEC,oBAAoB,CAAC,GAAGN,eAAe;EACjE,MAAM,CAACO,YAAY,EAAEC,eAAe,CAAC,GAAGP,UAAU;;EAElD;EACA,MAAMQ,aAAa,GAAGpB,WAAW,CAAC,MAAM;IACtC,MAAMqB,YAAY,GAAGjB,wBAAwB,CAACkB,IAAI,CAACR,KAAK,CAAC,CAAC,CAAC;;IAE3DK,eAAe,CAAC,CAACE,YAAY,CAAC,CAAC,CAAC;EAClC,CAAC,EAAE,CAACP,KAAK,CAAC,CAAC;;EAEX;EACAb,SAAS,CAAC,MAAM;IACd,IAAIe,iBAAiB,EAAE;MACrBI,aAAa,CAAC,CAAC;IACjB;EACF,CAAC,EAAE,CAACJ,iBAAiB,EAAEI,aAAa,CAAC,CAAC;EAEtC,oBACEd,OAAA,CAAAE,SAAA;IAAAe,QAAA,gBACEjB,OAAA;MACEkB,IAAI,EAAC,OAAO;MACZC,WAAW,EAAC,4CAAS;MACrBC,KAAK,EAAEZ,KAAM;MACba,QAAQ,EAAGC,CAAC,IAAK;QACfb,QAAQ,CAACa,CAAC,CAACC,MAAM,CAACH,KAAK,CAAC;MAC1B,CAAE;MACFI,MAAM,EAAEA,CAAA,KAAM;QACZb,oBAAoB,CAAC,IAAI,CAAC;MAC5B;IAAE;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,EACDhB,YAAY,iBAAIZ,OAAA,CAACJ,YAAY;MAACiC,OAAO,EAAEhC;IAAc;MAAA4B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA,eACzD,CAAC;AAEP,CAAC;AAACrB,EAAA,CAnCIJ,UAAU;AAAA2B,EAAA,GAAV3B,UAAU;AAqChB,eAAeA,UAAU;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}