{"ast":null,"code":"import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\n\n// Reduxスライスを生成\nconst userSlice = createSlice({\n  name: 'user',\n  initialState: {\n    userState: [],\n    blogPosts: []\n  },\n  reducers: {\n    addUserData(state, {\n      payload\n    }) {\n      console.log('ここに来る');\n      state.userState = payload;\n    },\n    addBlogPosts(state, {\n      payload\n    }) {\n      state.blogPosts = payload;\n    }\n  },\n  // ユーザプロフィール取得の非同期通信からstateに格納\n  extraReducers(builder) {\n    builder.addCase(userAsyncCreator.pending, () => {});\n    builder.addCase(userAsyncCreator.fulfilled, () => {});\n    builder.addCase(userAsyncCreator.rejected, () => {});\n  }\n});\n\n// 非同期アクションクリエーター生成\n// 第二引数は、非同期通信でユーザプロフィールを取得する処理\nexport const userAsyncCreator = createAsyncThunk('user/userProfile', async () => {});\nexport const {\n  addUserData,\n  addBlogPosts\n} = userSlice.actions;\nexport default userSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","userSlice","name","initialState","userState","blogPosts","reducers","addUserData","state","payload","console","log","addBlogPosts","extraReducers","builder","addCase","userAsyncCreator","pending","fulfilled","rejected","actions","reducer"],"sources":["C:/Users/sjamp/Documents/学習/react-guide-material/13_redux/start/src/070_blog/store/modules/userState.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\r\n\r\n// Reduxスライスを生成\r\nconst userSlice = createSlice({\r\n  name: 'user',\r\n  initialState: { userState: [], blogPosts: [] },\r\n  reducers: {\r\n    addUserData(state, { payload }) {\r\n      console.log('ここに来る');\r\n      state.userState = payload;\r\n    },\r\n    addBlogPosts(state, { payload }) {\r\n      state.blogPosts = payload;\r\n    },\r\n  },\r\n  // ユーザプロフィール取得の非同期通信からstateに格納\r\n  extraReducers(builder) {\r\n    builder.addCase(userAsyncCreator.pending, () => {});\r\n    builder.addCase(userAsyncCreator.fulfilled, () => {});\r\n    builder.addCase(userAsyncCreator.rejected, () => {});\r\n  },\r\n});\r\n\r\n// 非同期アクションクリエーター生成\r\n// 第二引数は、非同期通信でユーザプロフィールを取得する処理\r\nexport const userAsyncCreator = createAsyncThunk(\r\n  'user/userProfile',\r\n  async () => {}\r\n);\r\n\r\nexport const { addUserData, addBlogPosts } = userSlice.actions;\r\n\r\nexport default userSlice.reducer;\r\n"],"mappings":"AAAA,SAASA,WAAW,EAAEC,gBAAgB,QAAQ,kBAAkB;;AAEhE;AACA,MAAMC,SAAS,GAAGF,WAAW,CAAC;EAC5BG,IAAI,EAAE,MAAM;EACZC,YAAY,EAAE;IAAEC,SAAS,EAAE,EAAE;IAAEC,SAAS,EAAE;EAAG,CAAC;EAC9CC,QAAQ,EAAE;IACRC,WAAWA,CAACC,KAAK,EAAE;MAAEC;IAAQ,CAAC,EAAE;MAC9BC,OAAO,CAACC,GAAG,CAAC,OAAO,CAAC;MACpBH,KAAK,CAACJ,SAAS,GAAGK,OAAO;IAC3B,CAAC;IACDG,YAAYA,CAACJ,KAAK,EAAE;MAAEC;IAAQ,CAAC,EAAE;MAC/BD,KAAK,CAACH,SAAS,GAAGI,OAAO;IAC3B;EACF,CAAC;EACD;EACAI,aAAaA,CAACC,OAAO,EAAE;IACrBA,OAAO,CAACC,OAAO,CAACC,gBAAgB,CAACC,OAAO,EAAE,MAAM,CAAC,CAAC,CAAC;IACnDH,OAAO,CAACC,OAAO,CAACC,gBAAgB,CAACE,SAAS,EAAE,MAAM,CAAC,CAAC,CAAC;IACrDJ,OAAO,CAACC,OAAO,CAACC,gBAAgB,CAACG,QAAQ,EAAE,MAAM,CAAC,CAAC,CAAC;EACtD;AACF,CAAC,CAAC;;AAEF;AACA;AACA,OAAO,MAAMH,gBAAgB,GAAGhB,gBAAgB,CAC9C,kBAAkB,EAClB,YAAY,CAAC,CACf,CAAC;AAED,OAAO,MAAM;EAAEO,WAAW;EAAEK;AAAa,CAAC,GAAGX,SAAS,CAACmB,OAAO;AAE9D,eAAenB,SAAS,CAACoB,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}