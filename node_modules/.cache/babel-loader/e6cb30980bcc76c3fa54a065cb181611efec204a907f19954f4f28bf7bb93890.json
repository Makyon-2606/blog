{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sjamp\\\\Documents\\\\\\u5B66\\u7FD2\\\\react-guide-material\\\\13_redux\\\\start\\\\src\\\\070_blog\\\\Login.js\",\n  _s = $RefreshSig$();\nimport axios from 'axios';\nimport { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport { addUserData } from './store/modules/userState';\nimport { ENDPOINT_USER, INVALID_EMAIL_OR_PASSWORD_MESSAGE, NETWORK_ERROR } from './consts/const';\nimport ErrorMessage from './components/ErrorMessage';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Login = () => {\n  _s();\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  const [loginId, setLoginId] = useState(''); // ログインID入力値の状態管理\n  const [pass, setPass] = useState(''); // パスワード入力値の状態管理\n  const [errorFlag, setErrorFlag] = useState(false); // エラーフラグの状態管理\n  const [errorMessage, setErrorMessage] = useState(''); // エラーメッセージの状態管理\n\n  // ユーザ認証を行い、認証結果に応じて処理を行う関数\n  const verifyUser = async e => {\n    e.preventDefault(); // フォームのデフォルト送信を防止\n\n    // エラーを設定する関数\n    const displayError = message => {\n      setErrorFlag(true);\n      setErrorMessage(message);\n    };\n\n    // 空の入力をチェックする関数\n    const isInputEmpty = input => input.trim() === '';\n    if (isInputEmpty(loginId) || isInputEmpty(pass)) {\n      displayError(INVALID_EMAIL_OR_PASSWORD_MESSAGE);\n      return;\n    }\n    try {\n      const resData = await getCurrentUser(); // ユーザ情報を取得\n\n      if (resData.length > 0) {\n        dispatch(addUserData(resData[0])); // レスポンスデータをstoreに格納\n        navigate('/mypage'); // マイページに遷移\n      } else {\n        throw new Error(INVALID_EMAIL_OR_PASSWORD_MESSAGE);\n      }\n    } catch (error) {\n      displayError(error.message || 'An unexpected error occurred');\n    }\n  };\n\n  // ユーザ情報を取得する関数\n  const getCurrentUser = async e => {\n    try {\n      const res = await axios.get(`${ENDPOINT_USER}?email=${loginId}&pass=${pass}`);\n      console.log(res.data);\n      return res.data;\n    } catch (e) {\n      setErrorFlag(true);\n      setErrorMessage(NETWORK_ERROR);\n      throw new Error('ネットワークエラーが発生しました。');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"\\u30ED\\u30B0\\u30A4\\u30F3\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: verifyUser,\n      className: \"signup-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        placeholder: \"\\u30ED\\u30B0\\u30A4\\u30F3ID\\uFF08\\u30E1\\u30FC\\u30EB\\u30A2\\u30C9\\u30EC\\u30B9\\uFF09\",\n        value: loginId,\n        onChange: e => {\n          setLoginId(e.target.value);\n        },\n        className: \"input-field\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        placeholder: \"\\u30D1\\u30B9\\u30EF\\u30FC\\u30C9\",\n        value: pass,\n        onChange: e => {\n          setPass(e.target.value);\n        },\n        className: \"input-field\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"submit-button\",\n        children: \"\\u30ED\\u30B0\\u30A4\\u30F3\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), errorFlag && /*#__PURE__*/_jsxDEV(ErrorMessage, {\n      message: errorMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 21\n    }, this)]\n  }, void 0, true);\n};\n_s(Login, \"IzJYJf/ySaOZez+THH53LRdZMY0=\", false, function () {\n  return [useNavigate, useDispatch];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["axios","useState","useNavigate","useDispatch","addUserData","ENDPOINT_USER","INVALID_EMAIL_OR_PASSWORD_MESSAGE","NETWORK_ERROR","ErrorMessage","jsxDEV","_jsxDEV","Fragment","_Fragment","Login","_s","navigate","dispatch","loginId","setLoginId","pass","setPass","errorFlag","setErrorFlag","errorMessage","setErrorMessage","verifyUser","e","preventDefault","displayError","message","isInputEmpty","input","trim","resData","getCurrentUser","length","Error","error","res","get","console","log","data","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","className","type","placeholder","value","onChange","target","_c","$RefreshReg$"],"sources":["C:/Users/sjamp/Documents/学習/react-guide-material/13_redux/start/src/070_blog/Login.js"],"sourcesContent":["import axios from 'axios';\r\nimport { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { useDispatch } from 'react-redux';\r\nimport { addUserData } from './store/modules/userState';\r\n\r\nimport {\r\n  ENDPOINT_USER,\r\n  INVALID_EMAIL_OR_PASSWORD_MESSAGE,\r\n  NETWORK_ERROR,\r\n} from './consts/const';\r\nimport ErrorMessage from './components/ErrorMessage';\r\n\r\nconst Login = () => {\r\n  const navigate = useNavigate();\r\n  const dispatch = useDispatch();\r\n\r\n  const [loginId, setLoginId] = useState(''); // ログインID入力値の状態管理\r\n  const [pass, setPass] = useState(''); // パスワード入力値の状態管理\r\n  const [errorFlag, setErrorFlag] = useState(false); // エラーフラグの状態管理\r\n  const [errorMessage, setErrorMessage] = useState(''); // エラーメッセージの状態管理\r\n\r\n  // ユーザ認証を行い、認証結果に応じて処理を行う関数\r\n  const verifyUser = async (e) => {\r\n    e.preventDefault(); // フォームのデフォルト送信を防止\r\n\r\n    // エラーを設定する関数\r\n    const displayError = (message) => {\r\n      setErrorFlag(true);\r\n      setErrorMessage(message);\r\n    };\r\n\r\n    // 空の入力をチェックする関数\r\n    const isInputEmpty = (input) => input.trim() === '';\r\n\r\n    if (isInputEmpty(loginId) || isInputEmpty(pass)) {\r\n      displayError(INVALID_EMAIL_OR_PASSWORD_MESSAGE);\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const resData = await getCurrentUser(); // ユーザ情報を取得\r\n\r\n      if (resData.length > 0) {\r\n        dispatch(addUserData(resData[0])); // レスポンスデータをstoreに格納\r\n        navigate('/mypage'); // マイページに遷移\r\n      } else {\r\n        throw new Error(INVALID_EMAIL_OR_PASSWORD_MESSAGE);\r\n      }\r\n    } catch (error) {\r\n      displayError(error.message || 'An unexpected error occurred');\r\n    }\r\n  };\r\n\r\n  // ユーザ情報を取得する関数\r\n  const getCurrentUser = async (e) => {\r\n    try {\r\n      const res = await axios.get(\r\n        `${ENDPOINT_USER}?email=${loginId}&pass=${pass}`\r\n      );\r\n      console.log(res.data);\r\n      return res.data;\r\n    } catch (e) {\r\n      setErrorFlag(true);\r\n      setErrorMessage(NETWORK_ERROR);\r\n      throw new Error('ネットワークエラーが発生しました。');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <h1>ログイン</h1>\r\n      <form onSubmit={verifyUser} className='signup-form'>\r\n        <input\r\n          type='email'\r\n          placeholder='ログインID（メールアドレス）'\r\n          value={loginId}\r\n          onChange={(e) => {\r\n            setLoginId(e.target.value);\r\n          }}\r\n          className='input-field'\r\n        />\r\n        <input\r\n          type='password'\r\n          placeholder='パスワード'\r\n          value={pass}\r\n          onChange={(e) => {\r\n            setPass(e.target.value);\r\n          }}\r\n          className='input-field'\r\n        />\r\n        <button type='submit' className='submit-button'>\r\n          ログイン\r\n        </button>\r\n      </form>\r\n      {errorFlag && <ErrorMessage message={errorMessage} />}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}