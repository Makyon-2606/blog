{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sjamp\\\\Documents\\\\\\u5B66\\u7FD2\\\\react-guide-material\\\\13_redux\\\\start\\\\src\\\\070_blog\\\\components\\\\SignUpEmail.js\",\n  _s = $RefreshSig$();\nimport { useCallback, useEffect, useState } from 'react';\nimport ErrorMessage from './ErrorMessage';\nimport { EMAIL_INVALID, EMAIL_VALIDATION_PATTERN } from '../consts/const';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst SignUpEmail = ({\n  emailState,\n  emailErrorFlag\n}) => {\n  _s();\n  const [email, setEmail] = emailState; // 入力値の状態管理（props）\n  const [errorFlag, setErrorFlag] = emailErrorFlag; // エラーフラグ（props）\n  const [isFirstInputEmail, setIsFirstInputEmail] = useState(false); // 初期入力フラグ\n\n  // メールアドレスのバリデーションチェックを行う関数\n  const validateEmail = useCallback(() => {\n    const isEmailValid = EMAIL_VALIDATION_PATTERN.test(email); // メールアドレス形式が正しいか\n\n    setErrorFlag(!isEmailValid); // errorMessageがfalsyな値だったらfalse、truthyな値だったらtrue\n  }, [email]);\n\n  // 初期入力時のみ、バリデーションチェックを実行しない\n  useEffect(() => {\n    validateEmail();\n  }, [email, isFirstInputEmail]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"email\",\n      placeholder: \"\\u30E1\\u30FC\\u30EB\\u30A2\\u30C9\\u30EC\\u30B9\",\n      value: email,\n      onChange: e => {\n        setEmail(e.target.value);\n      },\n      onBlur: () => {\n        setIsFirstInputEmail(true);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), String(isFirstInputEmail), String(errorFlag), isFirstInputEmail && errorFlag && /*#__PURE__*/_jsxDEV(ErrorMessage, {\n      message: EMAIL_INVALID\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n_s(SignUpEmail, \"+76ZX8SzUGv0I/uLCuxkH48fTsc=\");\n_c = SignUpEmail;\nexport default SignUpEmail;\nvar _c;\n$RefreshReg$(_c, \"SignUpEmail\");","map":{"version":3,"names":["useCallback","useEffect","useState","ErrorMessage","EMAIL_INVALID","EMAIL_VALIDATION_PATTERN","jsxDEV","_jsxDEV","Fragment","_Fragment","SignUpEmail","emailState","emailErrorFlag","_s","email","setEmail","errorFlag","setErrorFlag","isFirstInputEmail","setIsFirstInputEmail","validateEmail","isEmailValid","test","children","type","placeholder","value","onChange","e","target","onBlur","fileName","_jsxFileName","lineNumber","columnNumber","String","message","_c","$RefreshReg$"],"sources":["C:/Users/sjamp/Documents/学習/react-guide-material/13_redux/start/src/070_blog/components/SignUpEmail.js"],"sourcesContent":["import { useCallback, useEffect, useState } from 'react';\r\nimport ErrorMessage from './ErrorMessage';\r\nimport { EMAIL_INVALID, EMAIL_VALIDATION_PATTERN } from '../consts/const';\r\n\r\nconst SignUpEmail = ({ emailState, emailErrorFlag }) => {\r\n  const [email, setEmail] = emailState; // 入力値の状態管理（props）\r\n  const [errorFlag, setErrorFlag] = emailErrorFlag; // エラーフラグ（props）\r\n  const [isFirstInputEmail, setIsFirstInputEmail] = useState(false); // 初期入力フラグ\r\n\r\n  // メールアドレスのバリデーションチェックを行う関数\r\n  const validateEmail = useCallback(() => {\r\n    const isEmailValid = EMAIL_VALIDATION_PATTERN.test(email); // メールアドレス形式が正しいか\r\n\r\n    setErrorFlag(!isEmailValid); // errorMessageがfalsyな値だったらfalse、truthyな値だったらtrue\r\n  }, [email]);\r\n\r\n  // 初期入力時のみ、バリデーションチェックを実行しない\r\n  useEffect(() => {\r\n    validateEmail();\r\n  }, [email, isFirstInputEmail]);\r\n\r\n  return (\r\n    <>\r\n      <input\r\n        type='email'\r\n        placeholder='メールアドレス'\r\n        value={email}\r\n        onChange={(e) => {\r\n          setEmail(e.target.value);\r\n        }}\r\n        onBlur={() => {\r\n          setIsFirstInputEmail(true);\r\n        }}\r\n      />\r\n      {String(isFirstInputEmail)}\r\n      {String(errorFlag)}\r\n      {isFirstInputEmail && errorFlag && (\r\n        <ErrorMessage message={EMAIL_INVALID} />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SignUpEmail;\r\n"],"mappings":";;AAAA,SAASA,WAAW,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AACxD,OAAOC,YAAY,MAAM,gBAAgB;AACzC,SAASC,aAAa,EAAEC,wBAAwB,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE1E,MAAMC,WAAW,GAAGA,CAAC;EAAEC,UAAU;EAAEC;AAAe,CAAC,KAAK;EAAAC,EAAA;EACtD,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGJ,UAAU,CAAC,CAAC;EACtC,MAAM,CAACK,SAAS,EAAEC,YAAY,CAAC,GAAGL,cAAc,CAAC,CAAC;EAClD,MAAM,CAACM,iBAAiB,EAAEC,oBAAoB,CAAC,GAAGjB,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC;;EAEnE;EACA,MAAMkB,aAAa,GAAGpB,WAAW,CAAC,MAAM;IACtC,MAAMqB,YAAY,GAAGhB,wBAAwB,CAACiB,IAAI,CAACR,KAAK,CAAC,CAAC,CAAC;;IAE3DG,YAAY,CAAC,CAACI,YAAY,CAAC,CAAC,CAAC;EAC/B,CAAC,EAAE,CAACP,KAAK,CAAC,CAAC;;EAEX;EACAb,SAAS,CAAC,MAAM;IACdmB,aAAa,CAAC,CAAC;EACjB,CAAC,EAAE,CAACN,KAAK,EAAEI,iBAAiB,CAAC,CAAC;EAE9B,oBACEX,OAAA,CAAAE,SAAA;IAAAc,QAAA,gBACEhB,OAAA;MACEiB,IAAI,EAAC,OAAO;MACZC,WAAW,EAAC,4CAAS;MACrBC,KAAK,EAAEZ,KAAM;MACba,QAAQ,EAAGC,CAAC,IAAK;QACfb,QAAQ,CAACa,CAAC,CAACC,MAAM,CAACH,KAAK,CAAC;MAC1B,CAAE;MACFI,MAAM,EAAEA,CAAA,KAAM;QACZX,oBAAoB,CAAC,IAAI,CAAC;MAC5B;IAAE;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,EACDC,MAAM,CAACjB,iBAAiB,CAAC,EACzBiB,MAAM,CAACnB,SAAS,CAAC,EACjBE,iBAAiB,IAAIF,SAAS,iBAC7BT,OAAA,CAACJ,YAAY;MAACiC,OAAO,EAAEhC;IAAc;MAAA2B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CACxC;EAAA,eACD,CAAC;AAEP,CAAC;AAACrB,EAAA,CArCIH,WAAW;AAAA2B,EAAA,GAAX3B,WAAW;AAuCjB,eAAeA,WAAW;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}