{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sjamp\\\\Documents\\\\\\u5B66\\u7FD2\\\\react-guide-material\\\\13_redux\\\\start\\\\src\\\\070_blog\\\\Mypage.js\",\n  _s = $RefreshSig$();\nimport { Link, useNavigate } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useEffect } from 'react';\nimport axios from 'axios';\nimport { ENDPOINT_BLOG } from './consts/const';\nimport { addBlogPosts as addPostsActions } from './store/modules/userState';\nimport BlogList from './components/BlogList';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Mypage = () => {\n  _s();\n  const userState = useSelector(state => state.user.userState);\n  const blogPosts = useSelector(state => state.user.blogPosts);\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  console.log(userState);\n\n  // ログイン完了後、userStateのIDとNameをlocalStorageに格納\n  if (userState.length !== 0) {\n    // localStorage.setItem('userId', userState.id);\n    // localStorage.setItem('userName', userState.name);\n\n    const encodedUserId = btoa(userState.id); // ユーザーIDをBase64でエンコード\n    localStorage.setItem('userToken', encodedUserId);\n  }\n\n  // localStorageから取得\n  // const userId = localStorage.getItem('userId');\n  // const userName = localStorage.getItem('userName');\n  console.log(localStorage.getItem('userToken'));\n\n  // ユーザのブログデータを取得\n  useEffect(() => {\n    (async () => {\n      try {\n        const res = await axios.get(`${ENDPOINT_BLOG}?keyId=${userId}`);\n        const posts = res.data[0].posts;\n        dispatch(addPostsActions(posts));\n      } catch (e) {\n        console.error('ブログデータの取得に失敗しました', e);\n        navigate('/');\n      }\n    })();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [userName, \"\\u3055\\u3093\\u306E\\u30DA\\u30FC\\u30B8\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      to: \"newPost\",\n      className: \"button new-post-button\",\n      children: \"\\u65B0\\u898F\\u6295\\u7A3F\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      to: \"changepass\",\n      className: \"button change-pass-button\",\n      children: \"\\u30D1\\u30B9\\u30EF\\u30FC\\u30C9\\u5909\\u66F4\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), blogPosts.length ? blogPosts.map(post => /*#__PURE__*/_jsxDEV(BlogList, {\n      post: post\n    }, post.postDate, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 33\n    }, this)) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"no-poslts-message\",\n      children: \"\\u6295\\u7A3F\\u304C\\u3042\\u308A\\u307E\\u305B\\u3093\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => navigate('/'),\n      className: \"button logout-button\",\n      children: \"\\u30ED\\u30B0\\u30A2\\u30A6\\u30C8\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(Mypage, \"nTcE7jgJb+deZb6hUYgMd2p3TGk=\", false, function () {\n  return [useSelector, useSelector, useNavigate, useDispatch];\n});\n_c = Mypage;\nexport default Mypage;\nvar _c;\n$RefreshReg$(_c, \"Mypage\");","map":{"version":3,"names":["Link","useNavigate","useDispatch","useSelector","useEffect","axios","ENDPOINT_BLOG","addBlogPosts","addPostsActions","BlogList","jsxDEV","_jsxDEV","Fragment","_Fragment","Mypage","_s","userState","state","user","blogPosts","navigate","dispatch","console","log","length","encodedUserId","btoa","id","localStorage","setItem","getItem","res","get","userId","posts","data","e","error","children","userName","fileName","_jsxFileName","lineNumber","columnNumber","to","className","map","post","postDate","onClick","_c","$RefreshReg$"],"sources":["C:/Users/sjamp/Documents/学習/react-guide-material/13_redux/start/src/070_blog/Mypage.js"],"sourcesContent":["import { Link, useNavigate } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { ENDPOINT_BLOG } from './consts/const';\r\nimport { addBlogPosts as addPostsActions } from './store/modules/userState';\r\nimport BlogList from './components/BlogList';\r\n\r\nconst Mypage = () => {\r\n  const userState = useSelector((state) => state.user.userState);\r\n  const blogPosts = useSelector((state) => state.user.blogPosts);\r\n  const navigate = useNavigate();\r\n  const dispatch = useDispatch();\r\n\r\n  console.log(userState);\r\n\r\n  // ログイン完了後、userStateのIDとNameをlocalStorageに格納\r\n  if (userState.length !== 0) {\r\n    // localStorage.setItem('userId', userState.id);\r\n    // localStorage.setItem('userName', userState.name);\r\n\r\n    const encodedUserId = btoa(userState.id); // ユーザーIDをBase64でエンコード\r\n    localStorage.setItem('userToken', encodedUserId);\r\n  }\r\n\r\n  // localStorageから取得\r\n  // const userId = localStorage.getItem('userId');\r\n  // const userName = localStorage.getItem('userName');\r\n  console.log(localStorage.getItem('userToken'));\r\n\r\n  // ユーザのブログデータを取得\r\n  useEffect(() => {\r\n    (async () => {\r\n      try {\r\n        const res = await axios.get(`${ENDPOINT_BLOG}?keyId=${userId}`);\r\n        const posts = res.data[0].posts;\r\n        dispatch(addPostsActions(posts));\r\n      } catch (e) {\r\n        console.error('ブログデータの取得に失敗しました', e);\r\n        navigate('/');\r\n      }\r\n    })();\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <h1>{userName}さんのページ</h1>\r\n      <Link to='newPost' className='button new-post-button'>\r\n        新規投稿\r\n      </Link>\r\n      <Link to='changepass' className='button change-pass-button'>\r\n        パスワード変更\r\n      </Link>\r\n      {blogPosts.length ? (\r\n        blogPosts.map((post) => <BlogList post={post} key={post.postDate} />)\r\n      ) : (\r\n        <div className='no-poslts-message'>投稿がありません</div>\r\n      )}\r\n      <button onClick={() => navigate('/')} className='button logout-button'>\r\n        ログアウト\r\n      </button>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Mypage;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}