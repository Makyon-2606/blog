{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sjamp\\\\Documents\\\\\\u5B66\\u7FD2\\\\react-guide-material\\\\13_redux\\\\start\\\\src\\\\070_blog\\\\components\\\\SignUpName.js\",\n  _s = $RefreshSig$();\nimport { useCallback, useEffect, useState } from 'react';\nimport { GENERAL_TEXT_VALIDATION_PATTERN } from '../consts/const';\nimport ErrorMessage from './ErrorMessage';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst SignUpName = ({\n  nameState,\n  firstInputName,\n  errorName\n}) => {\n  _s();\n  const [name, setName] = nameState;\n  const [isFirstInputName, setIsFirstInputName] = firstInputName;\n  const [isErrorName, setIsErrorName] = errorName;\n  const [errorMessage, setErrorMessage] = useState(null);\n\n  // 氏名のバリデーションチェックを行う関数\n  const validateName = useCallback(() => {\n    // const isValidateName =\n    //   !name || name.length > 20 || GENERAL_TEXT_VALIDATION_PATTERN.test(name); // 入力が0文字、21文字以上、特殊文字に該当するか\n    if (!name) {\n      setErrorMessage('氏名を入力してください');\n      setIsErrorName(true);\n      return;\n    } else if (name.length > 20) {\n      setErrorMessage('20文字以内で入力してください');\n      setIsErrorName(true);\n    } else if (GENERAL_TEXT_VALIDATION_PATTERN.test(name)) {\n      setErrorMessage('使用できない文字が含まれています');\n      setIsErrorName(true);\n    }\n    // setIsErrorName(isValidateName); // チェック結果に応じた値を代入\n  }, [name]);\n\n  // 初回入力中のみ、氏名バリデーションを実行しない\n  useEffect(() => {\n    if (isFirstInputName) {\n      validateName();\n    }\n  }, [isFirstInputName, validateName]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"\\u6C0F\\u540D\\uFF0820\\u6587\\u5B57\\u4EE5\\u5185\\uFF09\",\n      value: name,\n      onChange: e => {\n        setName(e.target.value);\n      },\n      onBlur: () => setIsFirstInputName(true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), isErrorName && /*#__PURE__*/_jsxDEV(ErrorMessage, {\n      message: errorMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 23\n    }, this)]\n  }, void 0, true);\n};\n_s(SignUpName, \"wSLz8oYe/vwtFXGfyn/GUjoGMbU=\");\n_c = SignUpName;\nexport default SignUpName;\nvar _c;\n$RefreshReg$(_c, \"SignUpName\");","map":{"version":3,"names":["useCallback","useEffect","useState","GENERAL_TEXT_VALIDATION_PATTERN","ErrorMessage","jsxDEV","_jsxDEV","Fragment","_Fragment","SignUpName","nameState","firstInputName","errorName","_s","name","setName","isFirstInputName","setIsFirstInputName","isErrorName","setIsErrorName","errorMessage","setErrorMessage","validateName","length","test","children","type","placeholder","value","onChange","e","target","onBlur","fileName","_jsxFileName","lineNumber","columnNumber","message","_c","$RefreshReg$"],"sources":["C:/Users/sjamp/Documents/学習/react-guide-material/13_redux/start/src/070_blog/components/SignUpName.js"],"sourcesContent":["import { useCallback, useEffect, useState } from 'react';\r\nimport { GENERAL_TEXT_VALIDATION_PATTERN } from '../consts/const';\r\nimport ErrorMessage from './ErrorMessage';\r\n\r\nconst SignUpName = ({ nameState, firstInputName, errorName }) => {\r\n  const [name, setName] = nameState;\r\n  const [isFirstInputName, setIsFirstInputName] = firstInputName;\r\n  const [isErrorName, setIsErrorName] = errorName;\r\n  const [errorMessage, setErrorMessage] = useState(null);\r\n\r\n  // 氏名のバリデーションチェックを行う関数\r\n  const validateName = useCallback(() => {\r\n    // const isValidateName =\r\n    //   !name || name.length > 20 || GENERAL_TEXT_VALIDATION_PATTERN.test(name); // 入力が0文字、21文字以上、特殊文字に該当するか\r\n    if (!name) {\r\n      setErrorMessage('氏名を入力してください');\r\n      setIsErrorName(true);\r\n      return;\r\n    } else if (name.length > 20) {\r\n      setErrorMessage('20文字以内で入力してください');\r\n      setIsErrorName(true);\r\n    } else if (GENERAL_TEXT_VALIDATION_PATTERN.test(name)) {\r\n      setErrorMessage('使用できない文字が含まれています');\r\n      setIsErrorName(true);\r\n    }\r\n    // setIsErrorName(isValidateName); // チェック結果に応じた値を代入\r\n  }, [name]);\r\n\r\n  // 初回入力中のみ、氏名バリデーションを実行しない\r\n  useEffect(() => {\r\n    if (isFirstInputName) {\r\n      validateName();\r\n    }\r\n  }, [isFirstInputName, validateName]);\r\n\r\n  return (\r\n    <>\r\n      <input\r\n        type='text'\r\n        placeholder='氏名（20文字以内）'\r\n        value={name}\r\n        onChange={(e) => {\r\n          setName(e.target.value);\r\n        }}\r\n        onBlur={() => setIsFirstInputName(true)}\r\n      />\r\n      {isErrorName && <ErrorMessage message={errorMessage} />}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SignUpName;\r\n"],"mappings":";;AAAA,SAASA,WAAW,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AACxD,SAASC,+BAA+B,QAAQ,iBAAiB;AACjE,OAAOC,YAAY,MAAM,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE1C,MAAMC,UAAU,GAAGA,CAAC;EAAEC,SAAS;EAAEC,cAAc;EAAEC;AAAU,CAAC,KAAK;EAAAC,EAAA;EAC/D,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGL,SAAS;EACjC,MAAM,CAACM,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGN,cAAc;EAC9D,MAAM,CAACO,WAAW,EAAEC,cAAc,CAAC,GAAGP,SAAS;EAC/C,MAAM,CAACQ,YAAY,EAAEC,eAAe,CAAC,GAAGnB,QAAQ,CAAC,IAAI,CAAC;;EAEtD;EACA,MAAMoB,YAAY,GAAGtB,WAAW,CAAC,MAAM;IACrC;IACA;IACA,IAAI,CAACc,IAAI,EAAE;MACTO,eAAe,CAAC,aAAa,CAAC;MAC9BF,cAAc,CAAC,IAAI,CAAC;MACpB;IACF,CAAC,MAAM,IAAIL,IAAI,CAACS,MAAM,GAAG,EAAE,EAAE;MAC3BF,eAAe,CAAC,iBAAiB,CAAC;MAClCF,cAAc,CAAC,IAAI,CAAC;IACtB,CAAC,MAAM,IAAIhB,+BAA+B,CAACqB,IAAI,CAACV,IAAI,CAAC,EAAE;MACrDO,eAAe,CAAC,kBAAkB,CAAC;MACnCF,cAAc,CAAC,IAAI,CAAC;IACtB;IACA;EACF,CAAC,EAAE,CAACL,IAAI,CAAC,CAAC;;EAEV;EACAb,SAAS,CAAC,MAAM;IACd,IAAIe,gBAAgB,EAAE;MACpBM,YAAY,CAAC,CAAC;IAChB;EACF,CAAC,EAAE,CAACN,gBAAgB,EAAEM,YAAY,CAAC,CAAC;EAEpC,oBACEhB,OAAA,CAAAE,SAAA;IAAAiB,QAAA,gBACEnB,OAAA;MACEoB,IAAI,EAAC,MAAM;MACXC,WAAW,EAAC,oDAAY;MACxBC,KAAK,EAAEd,IAAK;MACZe,QAAQ,EAAGC,CAAC,IAAK;QACff,OAAO,CAACe,CAAC,CAACC,MAAM,CAACH,KAAK,CAAC;MACzB,CAAE;MACFI,MAAM,EAAEA,CAAA,KAAMf,mBAAmB,CAAC,IAAI;IAAE;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACzC,CAAC,EACDlB,WAAW,iBAAIZ,OAAA,CAACF,YAAY;MAACiC,OAAO,EAAEjB;IAAa;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA,eACvD,CAAC;AAEP,CAAC;AAACvB,EAAA,CA7CIJ,UAAU;AAAA6B,EAAA,GAAV7B,UAAU;AA+ChB,eAAeA,UAAU;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}