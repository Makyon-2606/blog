{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sjamp\\\\Documents\\\\\\u5B66\\u7FD2\\\\react-guide-material\\\\13_redux\\\\start\\\\src\\\\070_blog\\\\components\\\\ChangeInputPassword.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport { useSelector } from 'react-redux';\nimport ErrorMessage from './ErrorMessage';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ChangeInputPassword = ({\n  inputPassErrorFlag\n}) => {\n  _s();\n  const [inputPass, setInputPass] = useState(''); // 現在のパスワードの状態管理\n  const [isFirstInputPass, setIsFirstInputPass] = useState(false); //  現在のパスワードの初期入力フラグ\n  const [errorFlag, setErrorFlag] = inputPassErrorFlag; // 現在のパスワードのエラーフラグ\n\n  const userState = useSelector(state => state.user.userState);\n\n  // 現在のパスワードが初期入力中ではない場合、現在のパスワードのバリデーションチェック関数を呼び出す\n  useEffect(() => {\n    if (isFirstInputPass) {\n      validateInputPass();\n    }\n  }, [inputPass, isFirstInputPass]);\n\n  // 現在のパスワードのバリデーションチェック関数\n  const validateInputPass = () => {\n    if (inputPass !== userState.pass) {\n      setErrorFlag(true);\n    } else {\n      setErrorFlag(false);\n    }\n    console.log(isFirstInputPass);\n    console.log(errorFlag);\n\n    // navigate('/mypage'); // マイページにリダイレクト\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      placeholder: \"\\u73FE\\u5728\\u306E\\u30D1\\u30B9\\u30EF\\u30FC\\u30C9\",\n      value: inputPass,\n      onChange: e => {\n        setInputPass(e.target.value);\n      },\n      onBlur: () => setIsFirstInputPass(true),\n      className: \"input-field\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), isFirstInputPass && errorFlag && /*#__PURE__*/_jsxDEV(ErrorMessage, {\n      message: '現在のパスワードと一致していません'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n_s(ChangeInputPassword, \"9eqKIwUwm3A/lzepgwKlqCCkdmA=\", false, function () {\n  return [useSelector];\n});\n_c = ChangeInputPassword;\nexport default ChangeInputPassword;\nvar _c;\n$RefreshReg$(_c, \"ChangeInputPassword\");","map":{"version":3,"names":["useState","useEffect","useSelector","ErrorMessage","jsxDEV","_jsxDEV","Fragment","_Fragment","ChangeInputPassword","inputPassErrorFlag","_s","inputPass","setInputPass","isFirstInputPass","setIsFirstInputPass","errorFlag","setErrorFlag","userState","state","user","validateInputPass","pass","console","log","children","type","placeholder","value","onChange","e","target","onBlur","className","fileName","_jsxFileName","lineNumber","columnNumber","message","_c","$RefreshReg$"],"sources":["C:/Users/sjamp/Documents/学習/react-guide-material/13_redux/start/src/070_blog/components/ChangeInputPassword.js"],"sourcesContent":["import { useState, useEffect } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport ErrorMessage from './ErrorMessage';\r\n\r\nconst ChangeInputPassword = ({ inputPassErrorFlag }) => {\r\n  const [inputPass, setInputPass] = useState(''); // 現在のパスワードの状態管理\r\n  const [isFirstInputPass, setIsFirstInputPass] = useState(false); //  現在のパスワードの初期入力フラグ\r\n  const [errorFlag, setErrorFlag] = inputPassErrorFlag; // 現在のパスワードのエラーフラグ\r\n\r\n  const userState = useSelector((state) => state.user.userState);\r\n\r\n  // 現在のパスワードが初期入力中ではない場合、現在のパスワードのバリデーションチェック関数を呼び出す\r\n  useEffect(() => {\r\n    if (isFirstInputPass) {\r\n      validateInputPass();\r\n    }\r\n  }, [inputPass, isFirstInputPass]);\r\n\r\n  // 現在のパスワードのバリデーションチェック関数\r\n  const validateInputPass = () => {\r\n    if (inputPass !== userState.pass) {\r\n      setErrorFlag(true);\r\n    } else {\r\n      setErrorFlag(false);\r\n    }\r\n\r\n    console.log(isFirstInputPass);\r\n    console.log(errorFlag);\r\n\r\n    // navigate('/mypage'); // マイページにリダイレクト\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <input\r\n        type='password'\r\n        placeholder='現在のパスワード'\r\n        value={inputPass}\r\n        onChange={(e) => {\r\n          setInputPass(e.target.value);\r\n        }}\r\n        onBlur={() => setIsFirstInputPass(true)}\r\n        className='input-field'\r\n      />\r\n      {isFirstInputPass && errorFlag && (\r\n        <ErrorMessage message={'現在のパスワードと一致していません'} />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ChangeInputPassword;\r\n"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,SAASC,WAAW,QAAQ,aAAa;AACzC,OAAOC,YAAY,MAAM,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE1C,MAAMC,mBAAmB,GAAGA,CAAC;EAAEC;AAAmB,CAAC,KAAK;EAAAC,EAAA;EACtD,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;EAChD,MAAM,CAACa,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGd,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC;EACjE,MAAM,CAACe,SAAS,EAAEC,YAAY,CAAC,GAAGP,kBAAkB,CAAC,CAAC;;EAEtD,MAAMQ,SAAS,GAAGf,WAAW,CAAEgB,KAAK,IAAKA,KAAK,CAACC,IAAI,CAACF,SAAS,CAAC;;EAE9D;EACAhB,SAAS,CAAC,MAAM;IACd,IAAIY,gBAAgB,EAAE;MACpBO,iBAAiB,CAAC,CAAC;IACrB;EACF,CAAC,EAAE,CAACT,SAAS,EAAEE,gBAAgB,CAAC,CAAC;;EAEjC;EACA,MAAMO,iBAAiB,GAAGA,CAAA,KAAM;IAC9B,IAAIT,SAAS,KAAKM,SAAS,CAACI,IAAI,EAAE;MAChCL,YAAY,CAAC,IAAI,CAAC;IACpB,CAAC,MAAM;MACLA,YAAY,CAAC,KAAK,CAAC;IACrB;IAEAM,OAAO,CAACC,GAAG,CAACV,gBAAgB,CAAC;IAC7BS,OAAO,CAACC,GAAG,CAACR,SAAS,CAAC;;IAEtB;EACF,CAAC;EAED,oBACEV,OAAA,CAAAE,SAAA;IAAAiB,QAAA,gBACEnB,OAAA;MACEoB,IAAI,EAAC,UAAU;MACfC,WAAW,EAAC,kDAAU;MACtBC,KAAK,EAAEhB,SAAU;MACjBiB,QAAQ,EAAGC,CAAC,IAAK;QACfjB,YAAY,CAACiB,CAAC,CAACC,MAAM,CAACH,KAAK,CAAC;MAC9B,CAAE;MACFI,MAAM,EAAEA,CAAA,KAAMjB,mBAAmB,CAAC,IAAI,CAAE;MACxCkB,SAAS,EAAC;IAAa;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxB,CAAC,EACDvB,gBAAgB,IAAIE,SAAS,iBAC5BV,OAAA,CAACF,YAAY;MAACkC,OAAO,EAAE;IAAoB;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAC9C;EAAA,eACD,CAAC;AAEP,CAAC;AAAC1B,EAAA,CA7CIF,mBAAmB;EAAA,QAKLN,WAAW;AAAA;AAAAoC,EAAA,GALzB9B,mBAAmB;AA+CzB,eAAeA,mBAAmB;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}