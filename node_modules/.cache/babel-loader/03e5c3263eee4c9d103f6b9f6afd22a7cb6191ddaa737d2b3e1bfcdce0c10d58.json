{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sjamp\\\\Documents\\\\\\u5B66\\u7FD2\\\\react-guide-material\\\\13_redux\\\\start\\\\src\\\\070_blog\\\\components\\\\SignUpName.js\",\n  _s = $RefreshSig$();\nimport { useCallback, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst SignUpName = () => {\n  _s();\n  // 氏名のバリデーションチェックを行う関数\n  const validateName = useCallback(() => {\n    const specialCharsPattern = /[^\\wぁ-んァ-ン一-龥Ａ-Ｚａ-ｚ., -@!'\"\\#$%&\\(\\)*+,\\-.\\/:;<=>\\?@\\[\\]\\^_`\\{\\|\\}~]/; // 特殊文字を含まない正規表現\n    const isValidateName = !name || name.length > 20 || specialCharsPattern.test(name); // 入力が0文字、21文字以上、特殊文字に該当するか\n\n    setIsErrorName(isValidateName); // バリデーション結果に応じて真偽値を代入\n  }, [name]);\n\n  // 初回入力中のみ、氏名バリデーションを実行しない\n  useEffect(() => {\n    if (isFirstInputName) {\n      validateName();\n    }\n  }, [isFirstInputName, validateName]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"\\u6C0F\\u540D\\uFF0820\\u6587\\u5B57\\u4EE5\\u5185\\uFF09\",\n      value: name,\n      onChange: e => {\n        setName(e.target.value);\n      },\n      onBlur: () => setIsFirstInputName(true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_s(SignUpName, \"crHFQxuLPDmmE7tbgSPDCjWhxtE=\");\n_c = SignUpName;\nexport default SignUpName;\nvar _c;\n$RefreshReg$(_c, \"SignUpName\");","map":{"version":3,"names":["useCallback","useEffect","jsxDEV","_jsxDEV","Fragment","_Fragment","SignUpName","_s","validateName","specialCharsPattern","isValidateName","name","length","test","setIsErrorName","isFirstInputName","children","type","placeholder","value","onChange","e","setName","target","onBlur","setIsFirstInputName","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/sjamp/Documents/学習/react-guide-material/13_redux/start/src/070_blog/components/SignUpName.js"],"sourcesContent":["import { useCallback, useEffect } from 'react';\r\n\r\nconst SignUpName = () => {\r\n  // 氏名のバリデーションチェックを行う関数\r\n  const validateName = useCallback(() => {\r\n    const specialCharsPattern =\r\n      /[^\\wぁ-んァ-ン一-龥Ａ-Ｚａ-ｚ., -@!'\"\\#$%&\\(\\)*+,\\-.\\/:;<=>\\?@\\[\\]\\^_`\\{\\|\\}~]/; // 特殊文字を含まない正規表現\r\n    const isValidateName =\r\n      !name || name.length > 20 || specialCharsPattern.test(name); // 入力が0文字、21文字以上、特殊文字に該当するか\r\n\r\n    setIsErrorName(isValidateName); // バリデーション結果に応じて真偽値を代入\r\n  }, [name]);\r\n\r\n  // 初回入力中のみ、氏名バリデーションを実行しない\r\n  useEffect(() => {\r\n    if (isFirstInputName) {\r\n      validateName();\r\n    }\r\n  }, [isFirstInputName, validateName]);\r\n\r\n  return (\r\n    <>\r\n      <input\r\n        type='text'\r\n        placeholder='氏名（20文字以内）'\r\n        value={name}\r\n        onChange={(e) => {\r\n          setName(e.target.value);\r\n        }}\r\n        onBlur={() => setIsFirstInputName(true)}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SignUpName;\r\n"],"mappings":";;AAAA,SAASA,WAAW,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE/C,MAAMC,UAAU,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACvB;EACA,MAAMC,YAAY,GAAGR,WAAW,CAAC,MAAM;IACrC,MAAMS,mBAAmB,GACvB,sEAAsE,CAAC,CAAC;IAC1E,MAAMC,cAAc,GAClB,CAACC,IAAI,IAAIA,IAAI,CAACC,MAAM,GAAG,EAAE,IAAIH,mBAAmB,CAACI,IAAI,CAACF,IAAI,CAAC,CAAC,CAAC;;IAE/DG,cAAc,CAACJ,cAAc,CAAC,CAAC,CAAC;EAClC,CAAC,EAAE,CAACC,IAAI,CAAC,CAAC;;EAEV;EACAV,SAAS,CAAC,MAAM;IACd,IAAIc,gBAAgB,EAAE;MACpBP,YAAY,CAAC,CAAC;IAChB;EACF,CAAC,EAAE,CAACO,gBAAgB,EAAEP,YAAY,CAAC,CAAC;EAEpC,oBACEL,OAAA,CAAAE,SAAA;IAAAW,QAAA,eACEb,OAAA;MACEc,IAAI,EAAC,MAAM;MACXC,WAAW,EAAC,oDAAY;MACxBC,KAAK,EAAER,IAAK;MACZS,QAAQ,EAAGC,CAAC,IAAK;QACfC,OAAO,CAACD,CAAC,CAACE,MAAM,CAACJ,KAAK,CAAC;MACzB,CAAE;MACFK,MAAM,EAAEA,CAAA,KAAMC,mBAAmB,CAAC,IAAI;IAAE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACzC;EAAC,gBACF,CAAC;AAEP,CAAC;AAACtB,EAAA,CA/BID,UAAU;AAAAwB,EAAA,GAAVxB,UAAU;AAiChB,eAAeA,UAAU;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}