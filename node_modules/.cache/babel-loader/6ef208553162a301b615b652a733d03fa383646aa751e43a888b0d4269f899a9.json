{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sjamp\\\\Documents\\\\\\u5B66\\u7FD2\\\\react-guide-material\\\\13_redux\\\\start\\\\src\\\\070_blog\\\\Mypage.js\",\n  _s = $RefreshSig$();\nimport { Link, useNavigate } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useEffect } from 'react';\nimport axios from 'axios';\nimport { ENDPOINT_BLOG, ENDPOINT_USER, NETWORK_ERROR } from './consts/const';\nimport { addBlogPosts as addPostsActions } from './store/modules/userState';\nimport BlogList from './components/BlogList';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Mypage = () => {\n  _s();\n  const userState = useSelector(state => state.user.userState);\n  const blogPosts = useSelector(state => state.user.blogPosts);\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n\n  // ログイン完了後、userStateのIDをエンコードして格納\n  if (userState.length !== 0) {\n    const encodedUserId = btoa(userState.id);\n    localStorage.setItem('userToken', encodedUserId);\n  }\n\n  // localStorageから取得\n  const storedToken = localStorage.getItem('userToken');\n  const decodedUserId = atob(storedToken);\n\n  // ユーザのデータを取得\n  useEffect(() => {\n    (async () => {\n      try {\n        const res = await axios.get(`${ENDPOINT_USER}?email=${decodedUserId}`);\n        return res.data;\n      } catch (e) {\n        dispatch(NETWORK_ERROR);\n        throw new Error('ネットワークエラーが発生しました。');\n      }\n    })();\n  }, []);\n\n  // ユーザのブログデータを取得\n  useEffect(() => {\n    (async () => {\n      try {\n        const res = await axios.get(`${ENDPOINT_BLOG}?keyId=${decodedUserId}`);\n        const posts = res.data[0].posts;\n        dispatch(addPostsActions(posts));\n      } catch (e) {\n        console.error('ブログデータの取得に失敗しました', e);\n        navigate('/');\n      }\n    })();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"\\u3055\\u3093\\u306E\\u30DA\\u30FC\\u30B8\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      to: \"newPost\",\n      className: \"button new-post-button\",\n      children: \"\\u65B0\\u898F\\u6295\\u7A3F\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      to: \"changepass\",\n      className: \"button change-pass-button\",\n      children: \"\\u30D1\\u30B9\\u30EF\\u30FC\\u30C9\\u5909\\u66F4\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), blogPosts.length ? blogPosts.map(post => /*#__PURE__*/_jsxDEV(BlogList, {\n      post: post\n    }, post.postDate, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 33\n    }, this)) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"no-poslts-message\",\n      children: \"\\u6295\\u7A3F\\u304C\\u3042\\u308A\\u307E\\u305B\\u3093\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => navigate('/'),\n      className: \"button logout-button\",\n      children: \"\\u30ED\\u30B0\\u30A2\\u30A6\\u30C8\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(Mypage, \"LJVKQF6h8wCIAqUn+S7Xp0AQ9Sw=\", false, function () {\n  return [useSelector, useSelector, useNavigate, useDispatch];\n});\n_c = Mypage;\nexport default Mypage;\nvar _c;\n$RefreshReg$(_c, \"Mypage\");","map":{"version":3,"names":["Link","useNavigate","useDispatch","useSelector","useEffect","axios","ENDPOINT_BLOG","ENDPOINT_USER","NETWORK_ERROR","addBlogPosts","addPostsActions","BlogList","jsxDEV","_jsxDEV","Fragment","_Fragment","Mypage","_s","userState","state","user","blogPosts","navigate","dispatch","length","encodedUserId","btoa","id","localStorage","setItem","storedToken","getItem","decodedUserId","atob","res","get","data","e","Error","posts","console","error","children","fileName","_jsxFileName","lineNumber","columnNumber","to","className","map","post","postDate","onClick","_c","$RefreshReg$"],"sources":["C:/Users/sjamp/Documents/学習/react-guide-material/13_redux/start/src/070_blog/Mypage.js"],"sourcesContent":["import { Link, useNavigate } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { ENDPOINT_BLOG, ENDPOINT_USER, NETWORK_ERROR } from './consts/const';\r\nimport { addBlogPosts as addPostsActions } from './store/modules/userState';\r\nimport BlogList from './components/BlogList';\r\n\r\nconst Mypage = () => {\r\n  const userState = useSelector((state) => state.user.userState);\r\n  const blogPosts = useSelector((state) => state.user.blogPosts);\r\n  const navigate = useNavigate();\r\n  const dispatch = useDispatch();\r\n\r\n  // ログイン完了後、userStateのIDをエンコードして格納\r\n  if (userState.length !== 0) {\r\n    const encodedUserId = btoa(userState.id);\r\n    localStorage.setItem('userToken', encodedUserId);\r\n  }\r\n\r\n  // localStorageから取得\r\n  const storedToken = localStorage.getItem('userToken');\r\n  const decodedUserId = atob(storedToken);\r\n\r\n  // ユーザのデータを取得\r\n  useEffect(() => {\r\n    (async () => {\r\n      try {\r\n        const res = await axios.get(`${ENDPOINT_USER}?email=${decodedUserId}`);\r\n        return res.data;\r\n      } catch (e) {\r\n        dispatch(NETWORK_ERROR);\r\n        throw new Error('ネットワークエラーが発生しました。');\r\n      }\r\n    })();\r\n  }, []);\r\n\r\n  // ユーザのブログデータを取得\r\n  useEffect(() => {\r\n    (async () => {\r\n      try {\r\n        const res = await axios.get(`${ENDPOINT_BLOG}?keyId=${decodedUserId}`);\r\n        const posts = res.data[0].posts;\r\n        dispatch(addPostsActions(posts));\r\n      } catch (e) {\r\n        console.error('ブログデータの取得に失敗しました', e);\r\n        navigate('/');\r\n      }\r\n    })();\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <h1>{}さんのページ</h1>\r\n      <Link to='newPost' className='button new-post-button'>\r\n        新規投稿\r\n      </Link>\r\n      <Link to='changepass' className='button change-pass-button'>\r\n        パスワード変更\r\n      </Link>\r\n      {blogPosts.length ? (\r\n        blogPosts.map((post) => <BlogList post={post} key={post.postDate} />)\r\n      ) : (\r\n        <div className='no-poslts-message'>投稿がありません</div>\r\n      )}\r\n      <button onClick={() => navigate('/')} className='button logout-button'>\r\n        ログアウト\r\n      </button>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Mypage;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}