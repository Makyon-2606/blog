{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sjamp\\\\Documents\\\\\\u5B66\\u7FD2\\\\react-guide-material\\\\13_redux\\\\start\\\\src\\\\070_blog\\\\components\\\\SignUpName.js\",\n  _s = $RefreshSig$();\nimport { useCallback, useEffect, useState } from 'react';\nimport ErrorMessage from './ErrorMessage';\nimport { GENERAL_TEXT_VALIDATION_PATTERN, NAME_REQUIRED, NAME_MAX_LENGTH, NAME_INVALID_CHARS } from '../consts/const';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst SignUpName = ({\n  nameState,\n  errorName\n}) => {\n  _s();\n  const [name, setName] = nameState;\n  const [isErrorName, setIsErrorName] = errorName;\n  const [isFirstInputName, setIsFirstInputName] = useState(false); // 初回入力フラグ\n  const [errorMessage, setErrorMessage] = useState(null); // エラーメッセージの状態管理\n\n  // 氏名のバリデーションチェックを行う関数\n  const validateName = useCallback(() => {\n    let message = '';\n    if (!name) {\n      message = NAME_REQUIRED;\n    } else if (name.length > 20) {\n      message = NAME_MAX_LENGTH;\n    } else if (GENERAL_TEXT_VALIDATION_PATTERN.test(name)) {\n      message = NAME_INVALID_CHARS;\n    }\n    setErrorMessage(message); // エラーメッセージをセット\n    setIsErrorName(!!message); // messageが空文字列ならfalse、それ以外ならtrueを設定\n  }, [name]);\n\n  // 初期入力時のみ、バリデーションを実行しない\n  useEffect(() => {\n    console.log(isFirstInputName);\n    if (isFirstInputName) {\n      validateName();\n    }\n  }, [validateName]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"\\u6C0F\\u540D\\uFF0820\\u6587\\u5B57\\u4EE5\\u5185\\uFF09\",\n      value: name,\n      onChange: e => {\n        setName(e.target.value);\n      },\n      onBlur: () => setIsFirstInputName(true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), isErrorName && /*#__PURE__*/_jsxDEV(ErrorMessage, {\n      message: errorMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 23\n    }, this)]\n  }, void 0, true);\n};\n_s(SignUpName, \"f/cO1oqyAZGG6RgtrinM5eCeXKU=\");\n_c = SignUpName;\nexport default SignUpName;\nvar _c;\n$RefreshReg$(_c, \"SignUpName\");","map":{"version":3,"names":["useCallback","useEffect","useState","ErrorMessage","GENERAL_TEXT_VALIDATION_PATTERN","NAME_REQUIRED","NAME_MAX_LENGTH","NAME_INVALID_CHARS","jsxDEV","_jsxDEV","Fragment","_Fragment","SignUpName","nameState","errorName","_s","name","setName","isErrorName","setIsErrorName","isFirstInputName","setIsFirstInputName","errorMessage","setErrorMessage","validateName","message","length","test","console","log","children","type","placeholder","value","onChange","e","target","onBlur","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/sjamp/Documents/学習/react-guide-material/13_redux/start/src/070_blog/components/SignUpName.js"],"sourcesContent":["import { useCallback, useEffect, useState } from 'react';\r\nimport ErrorMessage from './ErrorMessage';\r\nimport {\r\n  GENERAL_TEXT_VALIDATION_PATTERN,\r\n  NAME_REQUIRED,\r\n  NAME_MAX_LENGTH,\r\n  NAME_INVALID_CHARS,\r\n} from '../consts/const';\r\n\r\nconst SignUpName = ({ nameState, errorName }) => {\r\n  const [name, setName] = nameState;\r\n  const [isErrorName, setIsErrorName] = errorName;\r\n  const [isFirstInputName, setIsFirstInputName] = useState(false); // 初回入力フラグ\r\n  const [errorMessage, setErrorMessage] = useState(null); // エラーメッセージの状態管理\r\n\r\n  // 氏名のバリデーションチェックを行う関数\r\n  const validateName = useCallback(() => {\r\n    let message = '';\r\n    if (!name) {\r\n      message = NAME_REQUIRED;\r\n    } else if (name.length > 20) {\r\n      message = NAME_MAX_LENGTH;\r\n    } else if (GENERAL_TEXT_VALIDATION_PATTERN.test(name)) {\r\n      message = NAME_INVALID_CHARS;\r\n    }\r\n\r\n    setErrorMessage(message); // エラーメッセージをセット\r\n    setIsErrorName(!!message); // messageが空文字列ならfalse、それ以外ならtrueを設定\r\n  }, [name]);\r\n\r\n  // 初期入力時のみ、バリデーションを実行しない\r\n  useEffect(() => {\r\n    console.log(isFirstInputName);\r\n    if (isFirstInputName) {\r\n      validateName();\r\n    }\r\n  }, [validateName]);\r\n\r\n  return (\r\n    <>\r\n      <input\r\n        type='text'\r\n        placeholder='氏名（20文字以内）'\r\n        value={name}\r\n        onChange={(e) => {\r\n          setName(e.target.value);\r\n        }}\r\n        onBlur={() => setIsFirstInputName(true)}\r\n      />\r\n      {isErrorName && <ErrorMessage message={errorMessage} />}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SignUpName;\r\n"],"mappings":";;AAAA,SAASA,WAAW,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AACxD,OAAOC,YAAY,MAAM,gBAAgB;AACzC,SACEC,+BAA+B,EAC/BC,aAAa,EACbC,eAAe,EACfC,kBAAkB,QACb,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEzB,MAAMC,UAAU,GAAGA,CAAC;EAAEC,SAAS;EAAEC;AAAU,CAAC,KAAK;EAAAC,EAAA;EAC/C,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGJ,SAAS;EACjC,MAAM,CAACK,WAAW,EAAEC,cAAc,CAAC,GAAGL,SAAS;EAC/C,MAAM,CAACM,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGnB,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC;EACjE,MAAM,CAACoB,YAAY,EAAEC,eAAe,CAAC,GAAGrB,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;;EAExD;EACA,MAAMsB,YAAY,GAAGxB,WAAW,CAAC,MAAM;IACrC,IAAIyB,OAAO,GAAG,EAAE;IAChB,IAAI,CAACT,IAAI,EAAE;MACTS,OAAO,GAAGpB,aAAa;IACzB,CAAC,MAAM,IAAIW,IAAI,CAACU,MAAM,GAAG,EAAE,EAAE;MAC3BD,OAAO,GAAGnB,eAAe;IAC3B,CAAC,MAAM,IAAIF,+BAA+B,CAACuB,IAAI,CAACX,IAAI,CAAC,EAAE;MACrDS,OAAO,GAAGlB,kBAAkB;IAC9B;IAEAgB,eAAe,CAACE,OAAO,CAAC,CAAC,CAAC;IAC1BN,cAAc,CAAC,CAAC,CAACM,OAAO,CAAC,CAAC,CAAC;EAC7B,CAAC,EAAE,CAACT,IAAI,CAAC,CAAC;;EAEV;EACAf,SAAS,CAAC,MAAM;IACd2B,OAAO,CAACC,GAAG,CAACT,gBAAgB,CAAC;IAC7B,IAAIA,gBAAgB,EAAE;MACpBI,YAAY,CAAC,CAAC;IAChB;EACF,CAAC,EAAE,CAACA,YAAY,CAAC,CAAC;EAElB,oBACEf,OAAA,CAAAE,SAAA;IAAAmB,QAAA,gBACErB,OAAA;MACEsB,IAAI,EAAC,MAAM;MACXC,WAAW,EAAC,oDAAY;MACxBC,KAAK,EAAEjB,IAAK;MACZkB,QAAQ,EAAGC,CAAC,IAAK;QACflB,OAAO,CAACkB,CAAC,CAACC,MAAM,CAACH,KAAK,CAAC;MACzB,CAAE;MACFI,MAAM,EAAEA,CAAA,KAAMhB,mBAAmB,CAAC,IAAI;IAAE;MAAAiB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACzC,CAAC,EACDvB,WAAW,iBAAIT,OAAA,CAACN,YAAY;MAACsB,OAAO,EAAEH;IAAa;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA,eACvD,CAAC;AAEP,CAAC;AAAC1B,EAAA,CA3CIH,UAAU;AAAA8B,EAAA,GAAV9B,UAAU;AA6ChB,eAAeA,UAAU;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}