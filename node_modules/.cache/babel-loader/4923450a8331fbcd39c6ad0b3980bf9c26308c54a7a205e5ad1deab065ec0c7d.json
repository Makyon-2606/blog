{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sjamp\\\\Documents\\\\\\u5B66\\u7FD2\\\\react-guide-material\\\\13_redux\\\\start\\\\src\\\\070_blog\\\\components\\\\SignUpName.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport ErrorMessage from './ErrorMessage';\nimport { GENERAL_TEXT_VALIDATION_PATTERN, NAME_REQUIRED, NAME_MAX_LENGTH, NAME_INVALID_CHARS } from '../consts/const';\n\n/**\r\n * 氏名のコンポーネント\r\n *\r\n * @param {string, function} nameState 氏名の状態管理\r\n * @param {boolean, function} nameErrorFlag 氏名のエラーフラグの状態管理\r\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst SignUpName = ({\n  nameState,\n  nameErrorFlag\n}) => {\n  _s();\n  const [name, setName] = nameState; // 氏名の状態管理(props)\n  const [errorFlag, setErrorFlag] = nameErrorFlag; // 氏名のエラーフラグの状態管理(props)\n  const [isFirstInputName, setIsFirstInputName] = useState(false); // 氏名の初期入力フラグの状態管理\n  const [errorMessage, setErrorMessage] = useState(''); // 氏名のエラーメッセージの状態管理\n\n  /**\r\n   * 氏名のバリデーションオブジェクト\r\n   *\r\n   * @param {string} name 氏名の入力値\r\n   * @nemeが入力されているか／エラーメッセージ\r\n   * @nemeが20文字以上であるか／エラーメッセージ\r\n   * @nemeに許容されていない特殊文字があるか／エラーメッセージ\r\n   */\n  const validationNameRules = [{\n    test: name => !name,\n    message: NAME_REQUIRED\n  }, {\n    test: name => name.length > 20,\n    message: NAME_MAX_LENGTH\n  }, {\n    test: name => GENERAL_TEXT_VALIDATION_PATTERN.test(name),\n    message: NAME_INVALID_CHARS\n  }];\n\n  /**\r\n   * 氏名のバリデーションチェック関数\r\n   *\r\n   * @param {string} name 氏名の入力値\r\n   * @param {function} setErrorMessage 氏名のエラーメッセージの更新関数\r\n   * @param {function} setErrorFlag 氏名のエラーフラグの更新関数\r\n   * @rule validationNameRules配列から「最初にテスト条件を満たす」ルールを見つけて、格納している変数\r\n   * @validationNameRules 氏名欄のバリデーションオブジェクト\r\n   * @message rule.testの真偽値がtruthyだった場合、rule.messageを格納する変数\r\n   */\n  const validateName = () => {\n    const rule = validationNameRules.find(rule => rule.test(name));\n    console.log(rule);\n    const message = rule ? rule.message : '';\n    setErrorMessage(message);\n    setErrorFlag(Boolean(message));\n  };\n\n  /**\r\n   * バリデーションチェック関数を呼び出す処理\r\n   *\r\n   * @validateName 氏名のバリデーションチェック関数\r\n   * @param {string} name 氏名の入力値\r\n   */\n  useEffect(() => {\n    validateName();\n  }, [name]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"\\u6C0F\\u540D\\uFF0820\\u6587\\u5B57\\u4EE5\\u5185\\uFF09\",\n      value: name,\n      onChange: e => {\n        setName(e.target.value);\n      },\n      onBlur: () => setIsFirstInputName(true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), isFirstInputName && errorFlag && /*#__PURE__*/_jsxDEV(ErrorMessage, {\n      message: errorMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 41\n    }, this)]\n  }, void 0, true);\n};\n_s(SignUpName, \"Vm1hugElIZ7qxbEynfn52waoMvk=\");\n_c = SignUpName;\nexport default SignUpName;\nvar _c;\n$RefreshReg$(_c, \"SignUpName\");","map":{"version":3,"names":["useEffect","useState","ErrorMessage","GENERAL_TEXT_VALIDATION_PATTERN","NAME_REQUIRED","NAME_MAX_LENGTH","NAME_INVALID_CHARS","jsxDEV","_jsxDEV","Fragment","_Fragment","SignUpName","nameState","nameErrorFlag","_s","name","setName","errorFlag","setErrorFlag","isFirstInputName","setIsFirstInputName","errorMessage","setErrorMessage","validationNameRules","test","message","length","validateName","rule","find","console","log","Boolean","children","type","placeholder","value","onChange","e","target","onBlur","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/sjamp/Documents/学習/react-guide-material/13_redux/start/src/070_blog/components/SignUpName.js"],"sourcesContent":["import { useEffect, useState } from 'react';\r\nimport ErrorMessage from './ErrorMessage';\r\nimport {\r\n  GENERAL_TEXT_VALIDATION_PATTERN,\r\n  NAME_REQUIRED,\r\n  NAME_MAX_LENGTH,\r\n  NAME_INVALID_CHARS,\r\n} from '../consts/const';\r\n\r\n/**\r\n * 氏名のコンポーネント\r\n *\r\n * @param {string, function} nameState 氏名の状態管理\r\n * @param {boolean, function} nameErrorFlag 氏名のエラーフラグの状態管理\r\n */\r\nconst SignUpName = ({ nameState, nameErrorFlag }) => {\r\n  const [name, setName] = nameState; // 氏名の状態管理(props)\r\n  const [errorFlag, setErrorFlag] = nameErrorFlag; // 氏名のエラーフラグの状態管理(props)\r\n  const [isFirstInputName, setIsFirstInputName] = useState(false); // 氏名の初期入力フラグの状態管理\r\n  const [errorMessage, setErrorMessage] = useState(''); // 氏名のエラーメッセージの状態管理\r\n\r\n  /**\r\n   * 氏名のバリデーションオブジェクト\r\n   *\r\n   * @param {string} name 氏名の入力値\r\n   * @nemeが入力されているか／エラーメッセージ\r\n   * @nemeが20文字以上であるか／エラーメッセージ\r\n   * @nemeに許容されていない特殊文字があるか／エラーメッセージ\r\n   */\r\n  const validationNameRules = [\r\n    {\r\n      test: (name) => !name,\r\n      message: NAME_REQUIRED,\r\n    },\r\n    {\r\n      test: (name) => name.length > 20,\r\n      message: NAME_MAX_LENGTH,\r\n    },\r\n    {\r\n      test: (name) => GENERAL_TEXT_VALIDATION_PATTERN.test(name),\r\n      message: NAME_INVALID_CHARS,\r\n    },\r\n  ];\r\n\r\n  /**\r\n   * 氏名のバリデーションチェック関数\r\n   *\r\n   * @param {string} name 氏名の入力値\r\n   * @param {function} setErrorMessage 氏名のエラーメッセージの更新関数\r\n   * @param {function} setErrorFlag 氏名のエラーフラグの更新関数\r\n   * @rule validationNameRules配列から「最初にテスト条件を満たす」ルールを見つけて、格納している変数\r\n   * @validationNameRules 氏名欄のバリデーションオブジェクト\r\n   * @message rule.testの真偽値がtruthyだった場合、rule.messageを格納する変数\r\n   */\r\n  const validateName = () => {\r\n    const rule = validationNameRules.find((rule) => rule.test(name));\r\n    console.log(rule);\r\n    const message = rule ? rule.message : '';\r\n\r\n    setErrorMessage(message);\r\n    setErrorFlag(Boolean(message));\r\n  };\r\n\r\n  /**\r\n   * バリデーションチェック関数を呼び出す処理\r\n   *\r\n   * @validateName 氏名のバリデーションチェック関数\r\n   * @param {string} name 氏名の入力値\r\n   */\r\n  useEffect(() => {\r\n    validateName();\r\n  }, [name]);\r\n\r\n  return (\r\n    <>\r\n      <input\r\n        type='text'\r\n        placeholder='氏名（20文字以内）'\r\n        value={name}\r\n        onChange={(e) => {\r\n          setName(e.target.value);\r\n        }}\r\n        onBlur={() => setIsFirstInputName(true)}\r\n      />\r\n      {isFirstInputName && errorFlag && <ErrorMessage message={errorMessage} />}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SignUpName;\r\n"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,OAAOC,YAAY,MAAM,gBAAgB;AACzC,SACEC,+BAA+B,EAC/BC,aAAa,EACbC,eAAe,EACfC,kBAAkB,QACb,iBAAiB;;AAExB;AACA;AACA;AACA;AACA;AACA;AALA,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAMA,MAAMC,UAAU,GAAGA,CAAC;EAAEC,SAAS;EAAEC;AAAc,CAAC,KAAK;EAAAC,EAAA;EACnD,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGJ,SAAS,CAAC,CAAC;EACnC,MAAM,CAACK,SAAS,EAAEC,YAAY,CAAC,GAAGL,aAAa,CAAC,CAAC;EACjD,MAAM,CAACM,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGnB,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC;EACjE,MAAM,CAACoB,YAAY,EAAEC,eAAe,CAAC,GAAGrB,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;;EAEtD;AACF;AACA;AACA;AACA;AACA;AACA;AACA;EACE,MAAMsB,mBAAmB,GAAG,CAC1B;IACEC,IAAI,EAAGT,IAAI,IAAK,CAACA,IAAI;IACrBU,OAAO,EAAErB;EACX,CAAC,EACD;IACEoB,IAAI,EAAGT,IAAI,IAAKA,IAAI,CAACW,MAAM,GAAG,EAAE;IAChCD,OAAO,EAAEpB;EACX,CAAC,EACD;IACEmB,IAAI,EAAGT,IAAI,IAAKZ,+BAA+B,CAACqB,IAAI,CAACT,IAAI,CAAC;IAC1DU,OAAO,EAAEnB;EACX,CAAC,CACF;;EAED;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE,MAAMqB,YAAY,GAAGA,CAAA,KAAM;IACzB,MAAMC,IAAI,GAAGL,mBAAmB,CAACM,IAAI,CAAED,IAAI,IAAKA,IAAI,CAACJ,IAAI,CAACT,IAAI,CAAC,CAAC;IAChEe,OAAO,CAACC,GAAG,CAACH,IAAI,CAAC;IACjB,MAAMH,OAAO,GAAGG,IAAI,GAAGA,IAAI,CAACH,OAAO,GAAG,EAAE;IAExCH,eAAe,CAACG,OAAO,CAAC;IACxBP,YAAY,CAACc,OAAO,CAACP,OAAO,CAAC,CAAC;EAChC,CAAC;;EAED;AACF;AACA;AACA;AACA;AACA;EACEzB,SAAS,CAAC,MAAM;IACd2B,YAAY,CAAC,CAAC;EAChB,CAAC,EAAE,CAACZ,IAAI,CAAC,CAAC;EAEV,oBACEP,OAAA,CAAAE,SAAA;IAAAuB,QAAA,gBACEzB,OAAA;MACE0B,IAAI,EAAC,MAAM;MACXC,WAAW,EAAC,oDAAY;MACxBC,KAAK,EAAErB,IAAK;MACZsB,QAAQ,EAAGC,CAAC,IAAK;QACftB,OAAO,CAACsB,CAAC,CAACC,MAAM,CAACH,KAAK,CAAC;MACzB,CAAE;MACFI,MAAM,EAAEA,CAAA,KAAMpB,mBAAmB,CAAC,IAAI;IAAE;MAAAqB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACzC,CAAC,EACDzB,gBAAgB,IAAIF,SAAS,iBAAIT,OAAA,CAACN,YAAY;MAACuB,OAAO,EAAEJ;IAAa;MAAAoB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA,eACzE,CAAC;AAEP,CAAC;AAAC9B,EAAA,CAxEIH,UAAU;AAAAkC,EAAA,GAAVlC,UAAU;AA0EhB,eAAeA,UAAU;AAAC,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}