{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sjamp\\\\Documents\\\\\\u5B66\\u7FD2\\\\react-guide-material\\\\13_redux\\\\start\\\\src\\\\070_blog\\\\ChangePassword.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ChangePassword = () => {\n  _s();\n  const [inputPass, setInputPass] = useState('');\n  const [newPass, setNewPass] = useState('');\n  const [checkNewPass, setCheckNewPass] = useState('');\n  const navigate = useNavigate();\n\n  // ユーザの情報を取得\n  useEffect(() => {\n    (async () => {\n      try {\n        const res = await axios.get(`${ENDPOINT_USER}?id=${decodedUserId}`);\n        dispatch(addUserData(res.data[0]));\n      } catch (e) {\n        throw new Error(FETCH_DATA_FAILURE, e);\n      }\n    })();\n  }, []);\n\n  // ローカルストレージから取得（※今回は仮トークン扱い）\n  const storedToken = localStorage.getItem('userToken');\n  const decodedUserId = atob(storedToken);\n  console.log(decodedUserId);\n\n  // パスワードをチェック\n  const validatePass = e => {\n    e.preventDefault(); // フォームのデフォルト送信を防止\n    // navigate('/mypage'); // マイページにリダイレクト\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: validatePass,\n      className: \"signup-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        placeholder: \"\\u73FE\\u5728\\u306E\\u30D1\\u30B9\\u30EF\\u30FC\\u30C9\",\n        value: inputPass,\n        onChange: e => {\n          setInputPass(e.target.value);\n        },\n        className: \"input-field\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        placeholder: \"\\u65B0\\u3057\\u3044\\u30D1\\u30B9\\u30EF\\u30FC\\u30C9\",\n        value: newPass,\n        onChange: e => {\n          setNewPass(e.target.value);\n        },\n        className: \"input-field\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        placeholder: \"\\u65B0\\u3057\\u3044\\u30D1\\u30B9\\u30EF\\u30FC\\u30C9\\uFF08\\u78BA\\u8A8D\\u7528\\uFF09\",\n        value: checkNewPass,\n        onChange: e => {\n          setCheckNewPass(e.target.value);\n        },\n        className: \"input-field\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"submit-button\",\n        children: \"\\u5909\\u66F4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_s(ChangePassword, \"+SX3LrhhWMG158ljkBXmGBn3Bco=\", false, function () {\n  return [useNavigate];\n});\n_c = ChangePassword;\nexport default ChangePassword;\nvar _c;\n$RefreshReg$(_c, \"ChangePassword\");","map":{"version":3,"names":["useState","useNavigate","jsxDEV","_jsxDEV","Fragment","_Fragment","ChangePassword","_s","inputPass","setInputPass","newPass","setNewPass","checkNewPass","setCheckNewPass","navigate","useEffect","res","axios","get","ENDPOINT_USER","decodedUserId","dispatch","addUserData","data","e","Error","FETCH_DATA_FAILURE","storedToken","localStorage","getItem","atob","console","log","validatePass","preventDefault","children","onSubmit","className","type","placeholder","value","onChange","target","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/sjamp/Documents/学習/react-guide-material/13_redux/start/src/070_blog/ChangePassword.js"],"sourcesContent":["import { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst ChangePassword = () => {\r\n  const [inputPass, setInputPass] = useState('');\r\n  const [newPass, setNewPass] = useState('');\r\n  const [checkNewPass, setCheckNewPass] = useState('');\r\n  const navigate = useNavigate();\r\n\r\n  // ユーザの情報を取得\r\n  useEffect(() => {\r\n    (async () => {\r\n      try {\r\n        const res = await axios.get(`${ENDPOINT_USER}?id=${decodedUserId}`);\r\n        dispatch(addUserData(res.data[0]));\r\n      } catch (e) {\r\n        throw new Error(FETCH_DATA_FAILURE, e);\r\n      }\r\n    })();\r\n  }, []);\r\n\r\n  // ローカルストレージから取得（※今回は仮トークン扱い）\r\n  const storedToken = localStorage.getItem('userToken');\r\n  const decodedUserId = atob(storedToken);\r\n  console.log(decodedUserId);\r\n\r\n  // パスワードをチェック\r\n  const validatePass = (e) => {\r\n    e.preventDefault(); // フォームのデフォルト送信を防止\r\n    // navigate('/mypage'); // マイページにリダイレクト\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <form onSubmit={validatePass} className='signup-form'>\r\n        <input\r\n          type='password'\r\n          placeholder='現在のパスワード'\r\n          value={inputPass}\r\n          onChange={(e) => {\r\n            setInputPass(e.target.value);\r\n          }}\r\n          className='input-field'\r\n        />\r\n\r\n        <input\r\n          type='password'\r\n          placeholder='新しいパスワード'\r\n          value={newPass}\r\n          onChange={(e) => {\r\n            setNewPass(e.target.value);\r\n          }}\r\n          className='input-field'\r\n        />\r\n        <input\r\n          type='password'\r\n          placeholder='新しいパスワード（確認用）'\r\n          value={checkNewPass}\r\n          onChange={(e) => {\r\n            setCheckNewPass(e.target.value);\r\n          }}\r\n          className='input-field'\r\n        />\r\n        <button type='submit' className='submit-button'>\r\n          変更\r\n        </button>\r\n      </form>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ChangePassword;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}